<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="BackBumperPressed" type="0" type_size="1" nature="4" stm_value_name="BackBumperPressed" inner="1" tooltip="BackBumperPressed desc" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="242" y="112"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../happyrock.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="Wait" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="102" y="121"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Flow" id="3" localization="8" tooltip="" x="423" y="26"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Headbang" id="4" localization="8" tooltip="ID : #04B 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags :&#x0A;- Headbang" x="186" y="165"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="301"><BehaviorLayer name="behavior_layer1" mute="1"><BehaviorKeyframe name="keyframe1_copy" index="1"><Diagram><Box name="mischievous" id="1" localization="8" tooltip="mischievous" x="97" y="36"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        if( self.bIsRunning ):

            return;

        rDuration = 0.3;
        self.bMustStop = False;
        self.bIsRunning = True;

        while( not self.bMustStop ):
            ALLeds.post.fadeRGB( "FaceLed0", 0x060033, rDuration );
            ALLeds.post.fadeRGB( "FaceLed1", 0xf33300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff3300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed3", 0x701a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rDuration );

            #time.sleep( 0.1 );

            ALLeds.post.fadeRGB( "FaceLed0", 0x140000, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed1", 0xff3300, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed3", 0xf51a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed5", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed6", 0x7c0000, rDuration*3 );
            ALLeds.fadeRGB( "FaceLed7", 0x260000, rDuration*3 );

            if( self.bMustStop ):
                break;

        self.bIsRunning = False;
        self.onStopped();

    def onInput_onStop(self):
        self.bMustStop = True;]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="14" value="-12.3072" /><Key frame="23" value="12.4782" /><Key frame="36" value="-17.9323" /><Key frame="50" value="11.7751" /><Key frame="67" value="-17.7565" /><Key frame="80" value="10.6325" /><Key frame="94" value="-10.6373" /><Key frame="112" value="18.1033" /><Key frame="128" value="-13.8893" /><Key frame="145" value="12.5661" /><Key frame="161" value="-19.9538" /><Key frame="179" value="13.5329" /><Key frame="195" value="-18.3718" /><Key frame="212" value="14.8898" /><Key frame="221" value="-22.4847" /><Key frame="229" value="4.80263" /><Key frame="238" value="-15.0151" /><Key frame="246" value="3.78123" /><Key frame="253" value="-11.9858" /><Key frame="261" value="4.55645" /><Key frame="268" value="-5.32874" /><Key frame="278" value="11.5304" /><Key frame="290" value="8.81216" /><Key frame="301" value="-10.1978" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="14" value="-4.92434" /><Key frame="23" value="-4.57277" /><Key frame="36" value="-3.86964" /><Key frame="50" value="-5.53958" /><Key frame="67" value="-3.16651" /><Key frame="80" value="-1.76024" /><Key frame="94" value="-1.23289" /><Key frame="112" value="-3.34229" /><Key frame="128" value="-1.145" /><Key frame="145" value="-2.55126" /><Key frame="161" value="-3.2544" /><Key frame="179" value="-3.95753" /><Key frame="195" value="-5.89115" /><Key frame="212" value="-11.1647" /><Key frame="221" value="-9.49471" /><Key frame="229" value="-4.3091" /><Key frame="238" value="-0.705538" /><Key frame="246" value="-0.00240423" /><Key frame="253" value="-1.84813" /><Key frame="261" value="-2.46337" /><Key frame="268" value="-3.16651" /><Key frame="278" value="1.84332" /><Key frame="301" value="-0.090296" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="22" value="-25.7409" /><Key frame="35" value="-10.3033" /><Key frame="49" value="-25.7409" /><Key frame="66" value="-10.3033" /><Key frame="79" value="-25.7409" /><Key frame="93" value="-10.3033" /><Key frame="111" value="-19.581" /><Key frame="127" value="-10.3033" /><Key frame="144" value="-14.961" /><Key frame="160" value="-10.3033" /><Key frame="178" value="-14.961" /><Key frame="194" value="-10.3033" /><Key frame="211" value="-14.961" /><Key frame="245" value="-10.3033" /><Key frame="277" value="-25.7409" /><Key frame="290" value="-10.3033" /><Key frame="300" value="-2.57699" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="22" value="0" /><Key frame="35" value="0" /><Key frame="49" value="0" /><Key frame="66" value="0" /><Key frame="79" value="0" /><Key frame="93" value="0" /><Key frame="111" value="0" /><Key frame="127" value="0" /><Key frame="144" value="0" /><Key frame="160" value="0" /><Key frame="178" value="0" /><Key frame="194" value="0" /><Key frame="211" value="0" /><Key frame="245" value="0" /><Key frame="277" value="0" /><Key frame="290" value="0" /><Key frame="300" value="-0.00165662" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="22" value="14.0637" /><Key frame="35" value="4.14042" /><Key frame="49" value="14.0637" /><Key frame="66" value="4.14042" /><Key frame="79" value="14.0637" /><Key frame="93" value="4.14042" /><Key frame="111" value="12.5237" /><Key frame="127" value="4.14042" /><Key frame="144" value="9.44376" /><Key frame="160" value="4.14042" /><Key frame="178" value="9.44376" /><Key frame="194" value="4.14042" /><Key frame="211" value="9.44376" /><Key frame="245" value="4.14042" /><Key frame="277" value="14.0637" /><Key frame="290" value="4.14042" /><Key frame="300" value="-0.638153" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="20" value="-29.8808" /><Key frame="33" value="-29.7929" /><Key frame="47" value="-36.209" /><Key frame="64" value="-31.3749" /><Key frame="77" value="-31.8144" /><Key frame="91" value="-56.9514" /><Key frame="109" value="-56.4" /><Key frame="125" value="-78.8413" /><Key frame="142" value="-40.0762" /><Key frame="158" value="-88.5925" /><Key frame="176" value="-29.0019" /><Key frame="192" value="-88.5925" /><Key frame="209" value="-58.5335" /><Key frame="226" value="-66.0043" /><Key frame="243" value="-68.9047" /><Key frame="258" value="-53.6994" /><Key frame="275" value="-72.0688" /><Key frame="298" value="-33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-88.3336" /><Key frame="33" value="-98.2654" /><Key frame="47" value="-102.748" /><Key frame="64" value="-104.242" /><Key frame="77" value="-95.3649" /><Key frame="91" value="-45.8" /><Key frame="109" value="-49.837" /><Key frame="125" value="-25.662" /><Key frame="142" value="-33.7528" /><Key frame="158" value="-80.0718" /><Key frame="176" value="-28.1278" /><Key frame="192" value="-80.0718" /><Key frame="209" value="-66.5364" /><Key frame="226" value="-53.88" /><Key frame="243" value="-53.5285" /><Key frame="258" value="-51.7706" /><Key frame="275" value="-45.3545" /><Key frame="298" value="-69.7005" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0.230571" /><Key frame="33" value="0.230935" /><Key frame="64" value="0.230935" /><Key frame="91" value="0.224389" /><Key frame="109" value="0.618182" /><Key frame="125" value="0.45" /><Key frame="142" value="0.83" /><Key frame="158" value="0.43" /><Key frame="176" value="0.91" /><Key frame="192" value="0.51" /><Key frame="209" value="0.688387" /><Key frame="226" value="0.6992" /><Key frame="243" value="0.6992" /><Key frame="275" value="0.684" /><Key frame="298" value="0.232025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="97.2937" /><Key frame="33" value="96.8543" /><Key frame="47" value="90.5261" /><Key frame="64" value="95.9754" /><Key frame="77" value="92.1081" /><Key frame="91" value="50.4" /><Key frame="109" value="-27.8" /><Key frame="125" value="-65.0375" /><Key frame="142" value="-41.2236" /><Key frame="158" value="-23.5574" /><Key frame="176" value="-54.7589" /><Key frame="192" value="-23.5574" /><Key frame="209" value="47.3" /><Key frame="226" value="76.7271" /><Key frame="243" value="82.44" /><Key frame="258" value="87.0983" /><Key frame="275" value="78.6607" /><Key frame="298" value="91.4929" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="20" value="9.84147" /><Key frame="33" value="10.0173" /><Key frame="47" value="6.85315" /><Key frame="64" value="7.02893" /><Key frame="77" value="6.41369" /><Key frame="91" value="26.2" /><Key frame="109" value="15.2" /><Key frame="125" value="58.1867" /><Key frame="142" value="24.2557" /><Key frame="158" value="64.4222" /><Key frame="176" value="11.072" /><Key frame="192" value="64.4222" /><Key frame="209" value="21.0916" /><Key frame="226" value="23.6405" /><Key frame="243" value="23.8163" /><Key frame="258" value="20.8279" /><Key frame="275" value="23.6405" /><Key frame="298" value="10.0173" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="5.44688" /><Key frame="33" value="5.53477" /><Key frame="64" value="5.44688" /><Key frame="91" value="12.7" /><Key frame="109" value="33" /><Key frame="125" value="7.91266" /><Key frame="142" value="18" /><Key frame="176" value="18.2791" /><Key frame="209" value="16.1697" /><Key frame="226" value="-15.8229" /><Key frame="243" value="-10.8131" /><Key frame="275" value="2.45857" /><Key frame="298" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="21" value="56.9562" /><Key frame="34" value="86.5758" /><Key frame="48" value="50.3644" /><Key frame="65" value="89.5" /><Key frame="78" value="59.593" /><Key frame="92" value="89.5" /><Key frame="110" value="33.2255" /><Key frame="126" value="78.8413" /><Key frame="143" value="34.8075" /><Key frame="159" value="83.4995" /><Key frame="177" value="34.7196" /><Key frame="193" value="88.773" /><Key frame="210" value="38.7627" /><Key frame="227" value="51.1554" /><Key frame="244" value="57.3957" /><Key frame="259" value="45.7061" /><Key frame="276" value="65.0423" /><Key frame="299" value="25.2273" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="12" value="39.1" /><Key frame="21" value="10.2809" /><Key frame="34" value="31.3749" /><Key frame="48" value="10.7204" /><Key frame="65" value="31.9023" /><Key frame="78" value="18.5428" /><Key frame="92" value="31.2871" /><Key frame="110" value="11.6872" /><Key frame="126" value="25.662" /><Key frame="143" value="15.0271" /><Key frame="159" value="38.4942" /><Key frame="177" value="20.4764" /><Key frame="193" value="93.3386" /><Key frame="210" value="5.35899" /><Key frame="227" value="25.8378" /><Key frame="244" value="26.7167" /><Key frame="259" value="29.4413" /><Key frame="276" value="36.6484" /><Key frame="299" value="67.2348" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="12" value="0.57" /><Key frame="21" value="0.745455" /><Key frame="34" value="0.26" /><Key frame="48" value="0.82" /><Key frame="65" value="0.514873" /><Key frame="78" value="0.78" /><Key frame="92" value="0.3" /><Key frame="110" value="0.81" /><Key frame="126" value="0.45" /><Key frame="143" value="0.83" /><Key frame="159" value="0.43" /><Key frame="177" value="0.91" /><Key frame="193" value="0.51" /><Key frame="210" value="0.514873" /><Key frame="227" value="0.6944" /><Key frame="244" value="0.7988" /><Key frame="276" value="0.5424" /><Key frame="299" value="0.410207" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="21" value="-46.3165" /><Key frame="34" value="-64.7738" /><Key frame="48" value="-44.5587" /><Key frame="65" value="-44.7345" /><Key frame="78" value="-48.6017" /><Key frame="92" value="-49.217" /><Key frame="110" value="-64.6859" /><Key frame="126" value="-65.0375" /><Key frame="143" value="-50.4474" /><Key frame="159" value="-57.9182" /><Key frame="177" value="-55.6331" /><Key frame="193" value="9.05525" /><Key frame="210" value="18.3718" /><Key frame="227" value="60.2082" /><Key frame="244" value="66.6243" /><Key frame="259" value="70.4037" /><Key frame="276" value="70.931" /><Key frame="299" value="84.9937" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="21" value="-34.5438" /><Key frame="34" value="-73.6557" /><Key frame="48" value="-31.2919" /><Key frame="65" value="-74.7983" /><Key frame="78" value="-30.2372" /><Key frame="92" value="-80.4233" /><Key frame="110" value="-13.1862" /><Key frame="126" value="-58.1867" /><Key frame="143" value="-22.1511" /><Key frame="159" value="-77.2592" /><Key frame="177" value="-18.7233" /><Key frame="193" value="-51.5948" /><Key frame="210" value="-11.7799" /><Key frame="227" value="-20.7449" /><Key frame="244" value="-23.8211" /><Key frame="259" value="-20.1296" /><Key frame="276" value="-21.2722" /><Key frame="299" value="-7.03374" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="12" value="-10.7" /><Key frame="21" value="-7" /><Key frame="34" value="-6.85796" /><Key frame="65" value="-6.85796" /><Key frame="92" value="-7.4732" /><Key frame="126" value="-7.91266" /><Key frame="143" value="-8.00055" /><Key frame="177" value="-8.35212" /><Key frame="210" value="-12.9225" /><Key frame="227" value="37.9668" /><Key frame="244" value="30.3202" /><Key frame="276" value="5.00743" /><Key frame="299" value="9.22623" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Guitar" id="2" localization="8" tooltip="" x="188" y="44"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Guitar" id="1" localization="8" tooltip="" x="355" y="50"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Guitar" id="6" localization="8" tooltip="ID : #04D 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Entertainment&#x0A;- Dances&#x0A;- Headbang" x="159" y="40"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="251"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="26" value="7.55628" /><Key frame="39" value="-0.529755" /><Key frame="50" value="15.2908" /><Key frame="75" value="-14.9715" /><Key frame="86" value="9.40201" /><Key frame="92" value="-11.5437" /><Key frame="102" value="11.9509" /><Key frame="110" value="3.1617" /><Key frame="120" value="-13.5183" /><Key frame="127" value="5.49971" /><Key frame="140" value="13.8553" /><Key frame="151" value="-9.40302" /><Key frame="160" value="-13.0066" /><Key frame="171" value="4.26921" /><Key frame="178" value="10.5974" /><Key frame="212" value="-15.825" /><Key frame="220" value="6.77121" /><Key frame="233" value="-6.50261" /><Key frame="243" value="8.61691" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="26" value="14.6755" /><Key frame="39" value="13.6208" /><Key frame="67" value="7.46839" /><Key frame="75" value="0.612838" /><Key frame="92" value="1.93121" /><Key frame="110" value="17.7517" /><Key frame="120" value="17.2244" /><Key frame="127" value="21.4432" /><Key frame="140" value="20.3496" /><Key frame="151" value="13.1814" /><Key frame="160" value="13.0056" /><Key frame="171" value="15.2908" /><Key frame="188" value="14.9392" /><Key frame="220" value="-6.56512" /><Key frame="243" value="-0.178188" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="12" value="-1.97851" /><Key frame="36" value="-24.0718" /><Key frame="47" value="-17.3873" /><Key frame="117" value="-17.0612" /><Key frame="129" value="-6.50907" /><Key frame="148" value="-6.50907" /><Key frame="168" value="-17.1692" /><Key frame="185" value="-17.1692" /><Key frame="198" value="-6.10369" /><Key frame="217" value="-17.2009" /><Key frame="231" value="-16.6204" /><Key frame="244" value="-22.5053" /><Key frame="251" value="-21.8842" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="12" value="-0.433542" /><Key frame="36" value="-2.28016" /><Key frame="47" value="-8.11443" /><Key frame="64" value="-3.91495" /><Key frame="89" value="-9.71783" /><Key frame="129" value="-7.46617" /><Key frame="148" value="-0.175686" /><Key frame="168" value="3.53842" /><Key frame="185" value="3.53842" /><Key frame="198" value="0.269135" /><Key frame="217" value="3.39891" /><Key frame="231" value="3.39891" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="12" value="-0.573235" /><Key frame="36" value="13.6999" /><Key frame="47" value="9.20669" /><Key frame="117" value="9.20669" /><Key frame="129" value="1.90279" /><Key frame="148" value="1.90279" /><Key frame="168" value="9.84374" /><Key frame="185" value="9.84374" /><Key frame="198" value="1.91406" /><Key frame="217" value="10.2565" /><Key frame="231" value="10.2565" /><Key frame="244" value="16.6653" /><Key frame="251" value="16.0867" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="12" value="-37" /><Key frame="23" value="-58.545" /><Key frame="36" value="-58.0177" /><Key frame="47" value="-61.5333" /><Key frame="64" value="-73.2229" /><Key frame="83" value="-66.8068" /><Key frame="89" value="-66.8947" /><Key frame="99" value="-66.5432" /><Key frame="107" value="-66.1037" /><Key frame="117" value="-60.3907" /><Key frame="124" value="-70.1467" /><Key frame="137" value="-73.2229" /><Key frame="148" value="-72.1682" /><Key frame="157" value="-67.6857" /><Key frame="168" value="-73.3108" /><Key frame="175" value="-69.883" /><Key frame="185" value="-70.1467" /><Key frame="198" value="-63.2033" /><Key frame="209" value="-64.6974" /><Key frame="217" value="-64.8732" /><Key frame="230" value="-61.2697" /><Key frame="240" value="-60.5665" /><Key frame="248" value="-59.0724" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="12" value="-91" /><Key frame="23" value="-116.723" /><Key frame="36" value="-110" /><Key frame="47" value="-111.625" /><Key frame="64" value="-92.4645" /><Key frame="83" value="-102.924" /><Key frame="89" value="-103.978" /><Key frame="99" value="-91.8493" /><Key frame="107" value="-93.695" /><Key frame="117" value="-102.308" /><Key frame="124" value="-93.8708" /><Key frame="137" value="-92.7282" /><Key frame="148" value="-87.5426" /><Key frame="157" value="-90.0914" /><Key frame="168" value="-76.2045" /><Key frame="175" value="-79.3686" /><Key frame="185" value="-70.8431" /><Key frame="198" value="-78.9292" /><Key frame="209" value="-85.6089" /><Key frame="217" value="-86.6636" /><Key frame="230" value="-76.8198" /><Key frame="240" value="-84.4664" /><Key frame="248" value="-85.2574" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="12" value="0.636364" /><Key frame="23" value="0.345455" /><Key frame="36" value="0.254545" /><Key frame="47" value="0.381818" /><Key frame="89" value="0.366571" /><Key frame="99" value="0.0909091" /><Key frame="107" value="0.127273" /><Key frame="124" value="0.218182" /><Key frame="137" value="0.343298" /><Key frame="148" value="0.254545" /><Key frame="157" value="0.332753" /><Key frame="168" value="0.127273" /><Key frame="175" value="0.127273" /><Key frame="198" value="0.254545" /><Key frame="209" value="0.127273" /><Key frame="217" value="0.0909091" /><Key frame="230" value="0.176364" /><Key frame="240" value="0.0909091" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="23" value="32.0315" /><Key frame="36" value="29.3948" /><Key frame="47" value="24.0334" /><Key frame="64" value="27.8127" /><Key frame="83" value="28.7795" /><Key frame="89" value="27.3732" /><Key frame="99" value="25.6154" /><Key frame="107" value="25.0002" /><Key frame="117" value="32.2952" /><Key frame="124" value="33.4378" /><Key frame="137" value="34.7562" /><Key frame="148" value="36.3382" /><Key frame="157" value="38.6234" /><Key frame="168" value="36.9534" /><Key frame="175" value="36.6898" /><Key frame="185" value="37.5687" /><Key frame="198" value="31.9436" /><Key frame="209" value="35.1956" /><Key frame="217" value="33.8772" /><Key frame="230" value="28.5158" /><Key frame="240" value="30.6252" /><Key frame="248" value="29.9221" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="23" value="29.7929" /><Key frame="36" value="29.4413" /><Key frame="47" value="27.6835" /><Key frame="64" value="26.453" /><Key frame="83" value="48.4259" /><Key frame="89" value="51.6779" /><Key frame="99" value="32.3418" /><Key frame="107" value="32.5175" /><Key frame="117" value="58.9729" /><Key frame="124" value="56.0725" /><Key frame="137" value="56.4241" /><Key frame="148" value="43.5919" /><Key frame="157" value="51.4143" /><Key frame="168" value="47.3712" /><Key frame="175" value="47.4591" /><Key frame="185" value="36.5606" /><Key frame="198" value="36.6484" /><Key frame="209" value="51.0627" /><Key frame="217" value="46.0529" /><Key frame="230" value="22.6737" /><Key frame="240" value="25.3104" /><Key frame="248" value="26.1014" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="12" value="-72" /><Key frame="23" value="-80" /><Key frame="36" value="-87" /><Key frame="47" value="-83" /><Key frame="64" value="-86" /><Key frame="83" value="-100" /><Key frame="89" value="-104" /><Key frame="107" value="-81.478" /><Key frame="117" value="-104" /><Key frame="124" value="-104.066" /><Key frame="137" value="-104.496" /><Key frame="157" value="-104.496" /><Key frame="175" value="-100.551" /><Key frame="198" value="-98.529" /><Key frame="217" value="-104.242" /><Key frame="240" value="-88.0699" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="24" value="71.6962" /><Key frame="37" value="75.6513" /><Key frame="48" value="53.5905" /><Key frame="55" value="68.0048" /><Key frame="65" value="59.3035" /><Key frame="73" value="50.778" /><Key frame="84" value="42.6041" /><Key frame="90" value="42.6041" /><Key frame="100" value="62.2918" /><Key frame="108" value="54.3815" /><Key frame="118" value="68.7079" /><Key frame="125" value="48.9676" /><Key frame="138" value="37.7643" /><Key frame="149" value="71.872" /><Key frame="158" value="52.6237" /><Key frame="164" value="76.433" /><Key frame="169" value="55.6999" /><Key frame="176" value="72.8388" /><Key frame="186" value="47.3502" /><Key frame="199" value="36.5395" /><Key frame="210" value="72.9267" /><Key frame="218" value="53.9421" /><Key frame="225" value="71.3447" /><Key frame="231" value="47.7018" /><Key frame="241" value="73.1025" /><Key frame="249" value="51.5752" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="24" value="32.4813" /><Key frame="37" value="41.2705" /><Key frame="48" value="7.02893" /><Key frame="55" value="27.3319" /><Key frame="65" value="23.992" /><Key frame="73" value="5.71056" /><Key frame="84" value="-3.51807" /><Key frame="90" value="-3.69386" /><Key frame="100" value="25.7499" /><Key frame="108" value="1.14019" /><Key frame="118" value="37.2379" /><Key frame="125" value="0.349163" /><Key frame="138" value="7.90785" /><Key frame="149" value="35.9453" /><Key frame="158" value="8.87466" /><Key frame="164" value="41.1309" /><Key frame="169" value="8.78677" /><Key frame="176" value="33.6601" /><Key frame="186" value="13.5329" /><Key frame="199" value="13.3571" /><Key frame="210" value="35.1543" /><Key frame="218" value="14.3239" /><Key frame="225" value="39.8125" /><Key frame="231" value="-0.79343" /><Key frame="241" value="26.6288" /><Key frame="249" value="4.74375" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="24" value="0.454545" /><Key frame="37" value="0.45348" /><Key frame="48" value="0.672727" /><Key frame="55" value="0.287273" /><Key frame="65" value="0.381818" /><Key frame="84" value="0.690909" /><Key frame="90" value="0.654545" /><Key frame="100" value="0.305455" /><Key frame="108" value="0.418182" /><Key frame="118" value="0.345455" /><Key frame="125" value="0.654545" /><Key frame="138" value="0.749091" /><Key frame="158" value="0.469091" /><Key frame="164" value="0.327273" /><Key frame="169" value="0.436364" /><Key frame="176" value="0.318182" /><Key frame="186" value="0.545455" /><Key frame="199" value="0.727273" /><Key frame="210" value="0.436364" /><Key frame="218" value="0.729115" /><Key frame="225" value="0.490909" /><Key frame="231" value="0.618182" /><Key frame="241" value="0.490909" /><Key frame="249" value="0.745455" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="24" value="25.2015" /><Key frame="37" value="25.641" /><Key frame="48" value="31.8813" /><Key frame="55" value="26.6078" /><Key frame="65" value="26.3441" /><Key frame="73" value="30.2113" /><Key frame="84" value="32.5844" /><Key frame="90" value="33.3754" /><Key frame="100" value="22.8284" /><Key frame="108" value="27.4867" /><Key frame="118" value="12.2814" /><Key frame="125" value="40.9341" /><Key frame="138" value="48.7565" /><Key frame="149" value="42.1646" /><Key frame="158" value="44.5377" /><Key frame="164" value="34.9575" /><Key frame="169" value="38.2974" /><Key frame="176" value="35.3969" /><Key frame="186" value="51.3932" /><Key frame="199" value="57.0183" /><Key frame="210" value="31.9692" /><Key frame="218" value="39.1763" /><Key frame="225" value="20.2796" /><Key frame="231" value="33.9028" /><Key frame="241" value="26.5199" /><Key frame="249" value="35.6606" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="24" value="-31.5969" /><Key frame="37" value="-27.2903" /><Key frame="48" value="-22.3424" /><Key frame="55" value="-21.112" /><Key frame="65" value="-19.442" /><Key frame="73" value="-21.3756" /><Key frame="84" value="-21.3756" /><Key frame="90" value="-21.5514" /><Key frame="100" value="-15.5748" /><Key frame="108" value="-18.1236" /><Key frame="118" value="-15.6627" /><Key frame="125" value="-30.9558" /><Key frame="138" value="-32.0984" /><Key frame="149" value="-28.4948" /><Key frame="158" value="-28.3191" /><Key frame="164" value="-27.0007" /><Key frame="169" value="-25.946" /><Key frame="176" value="-23.7487" /><Key frame="186" value="-25.5065" /><Key frame="199" value="-25.946" /><Key frame="210" value="-26.737" /><Key frame="218" value="-32.1863" /><Key frame="225" value="-26.6491" /><Key frame="231" value="-28.2312" /><Key frame="241" value="-26.6491" /><Key frame="249" value="-20.9362" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="24" value="58" /><Key frame="37" value="57.6546" /><Key frame="55" value="56.6878" /><Key frame="65" value="56.5999" /><Key frame="90" value="57.5667" /><Key frame="100" value="58.6214" /><Key frame="125" value="59.3245" /><Key frame="138" value="58.5335" /><Key frame="158" value="58.9729" /><Key frame="169" value="58.6214" /><Key frame="186" value="57.303" /><Key frame="210" value="68" /><Key frame="218" value="47" /><Key frame="225" value="63" /><Key frame="231" value="53" /><Key frame="241" value="59" /><Key frame="249" value="49" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Wait" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="152" y="160"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="0.05" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="187" y="159"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="30" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Link inputowner="1" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Verbeugen" id="7" localization="8" tooltip="" x="576" y="25"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Verbeugen" id="4" localization="8" tooltip="" x="415" y="36"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20"><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="20" value="-21.9649" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="20" value="1.01732" /></ActuatorCurve><ActuatorCurve name="" actuator="HipPitch" mute="0" unit="0"><Key frame="20" value="-53.307" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="20" value="-0.218203" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="20" value="14.8698" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="20" value="-6.29421" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-98.4242" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0.6942" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="101.472" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="20" value="5.45985" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="1.9876" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="20" value="5.64616" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="20" value="96.6321" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="20" value="0.688049" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="20" value="100.186" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="20" value="-5.62094" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="20" value="-2.14467" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Wait" id="5" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="256" y="40"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Go to position Stand" id="6" localization="8" tooltip="Robot will go to the position Stand&lt;br/&gt;Position description : Standing position with low power consumption. " x="86" y="38"><bitmap>media/images/positions/Stand.png</bitmap><script language="4"><content><![CDATA[#~ This script was generated automatically by drang&drop from Position Library
class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.postureProxy = None
        try:
            self.postureProxy = ALProxy("ALRobotPosture")
        except:
            self.logger.error("Module 'ALRobotPosture' not found.")

    def onUnload(self):
        if(self.postureProxy != None):
            self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.postureProxy != None):
            result = self.postureProxy.goToPosture("Stand", 0.8)
            if(result):
                self.success()
            else:
                self.logger.error("Posture Stand is not a part of the standard posture library or robot cannot reach the posture")
                self.failure()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method,               as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Box name="Wait (1)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="555" y="34"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Go to position Stand (1)" id="2" localization="8" tooltip="Robot will go to the position Stand&lt;br/&gt;Position description : Standing position with low power consumption. " x="695" y="34"><bitmap>media/images/positions/Stand.png</bitmap><script language="4"><content><![CDATA[#~ This script was generated automatically by drang&drop from Position Library
class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.postureProxy = None
        try:
            self.postureProxy = ALProxy("ALRobotPosture")
        except:
            self.logger.error("Module 'ALRobotPosture' not found.")

    def onUnload(self):
        if(self.postureProxy != None):
            self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.postureProxy != None):
            result = self.postureProxy.goToPosture("Stand", 0.8)
            if(result):
                self.success()
            else:
                self.logger.error("Posture Stand is not a part of the standard posture library or robot cannot reach the posture")
                self.failure()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method,               as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Start Demo Main" id="18" localization="0" tooltip="Starts the behavior of the name given as input." x="777" y="57"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_startBehavior(self):
        life = ALProxy("ALAutonomousLife")
        state = life.getState()

        if "disabled" in state:
            bm = ALProxy("ALBehaviorManager")
            bm.startBehavior(self.getParameter("behaviorId"))
            self.onBehaviorStarted(self.getParameter("behaviorId")) #~ activate output of the box
        else:
            self.onBehaviorStarted(None)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="startBehavior" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onBehaviorStarted" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. Recalls the behavior name." id="3" /><Parameter name="behaviorId" inherits_from_parent="1" content_type="3" value="demo_MAIN/behavior_1" default_value="" custom_choice="0" tooltip="" id="4" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="3" outputowner="1" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="18" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="0" indexofinput="5" outputowner="18" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>