<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="webapi/startAutonomousLife" type="0" type_size="1" nature="4" stm_value_name="webapi/startAutonomousLife" inner="1" tooltip="webapi/startAutonomousLife desc" id="4" /><Input name="webapi/stopAutonomousLife" type="0" type_size="1" nature="4" stm_value_name="webapi/stopAutonomousLife" inner="1" tooltip="webapi/stopAutonomousLife desc" id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="70.7107"><Box name="Autonomous Life" id="19" localization="8" tooltip="" x="132" y="24"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="webapi/attract" type="0" type_size="1" nature="4" stm_value_name="webapi/attract" inner="1" tooltip="webapi/attract desc" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Parameter name="Tracking Mode" inherits_from_parent="0" content_type="3" value="Navigate" default_value="Navigate" custom_choice="0" tooltip="" id="6"><Choice value="Head" /><Choice value="BodyRotation" /><Choice value="WholeBody" /><Choice value="Navigate" /></Parameter><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="Head Action" id="13" localization="8" tooltip="" x="353" y="458"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="Tactile Head" id="8" localization="8" tooltip="Detect touch on head tactile sensor." x="100" y="120"><bitmap>media/images/box/sensors/tactileHead.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" /><Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" /><Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" /><Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Head-sequence" type="Lock" timeout="0" /></Box><Box name="Play Sound" id="9" localization="8" tooltip="" x="493" y="303"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="177" y="80"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="3" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Play Sound" id="2" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="422" y="81"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../sounds/enu_ono_ba_lookintoeyes_0%.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="213" y="72"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self, p):
        fname = self.getParameter("File name")
        fname = fname.replace("%", str(p))
        fname = self.framemanager.getBehaviorPath(self.behaviorId) + str(fname)
        self.onStopped( fname )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Move Head" id="10" localization="8" tooltip="" x="498" y="406"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="juliette"><ActuatorCurve name="" actuator="HeadPitch" mute="0" unit="0"><Key frame="15" value="7.5" /><Key frame="30" value="-16.9" /><Key frame="45" value="7.5" /><Key frame="60" value="-16.9" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Only Once" id="11" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="326" y="153"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" /><Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="4" /></Box><Box name="Wait For Signals" id="12" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="627" y="354"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" /><Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" /><Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" /></Box><Box name="Raise Event" id="2" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="501" y="0"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/attract" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Link inputowner="11" indexofinput="2" outputowner="8" indexofoutput="8" /><Link inputowner="11" indexofinput="2" outputowner="8" indexofoutput="9" /><Link inputowner="11" indexofinput="2" outputowner="8" indexofoutput="10" /><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="11" indexofinput="3" outputowner="12" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="12" indexofinput="3" outputowner="10" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="11" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Awereness" id="8" localization="8" tooltip="" x="347" y="205"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onAttract" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" /><Input name="webapi/startAwareness" type="0" type_size="1" nature="4" stm_value_name="webapi/startAwareness" inner="1" tooltip="webapi/startAwareness desc" id="5" /><Input name="webapi/stopAwareness" type="0" type_size="1" nature="4" stm_value_name="webapi/stopAwareness" inner="1" tooltip="webapi/stopAwareness desc" id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" /><Output name="distracted" type="1" type_size="1" nature="1" inner="0" tooltip="" id="8" /><Parameter name="Tracking Mode" inherits_from_parent="1" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="9" /><Parameter name="enable" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="70.7107"><Box name="Basic Awareness" id="4" localization="8" tooltip="This box is an interface to the module ALBasicAwareness.&#x0A;&#x0A;It is a simple way to make the robot establish and keep eye contact with people.&#x0A;&#x0A;V1.1.0" x="117" y="300"><bitmap>media/images/box/tracker/basicawareness.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        try:
            self.awareness = ALProxy('ALBasicAwareness')
        except Exception as e:
            self.awareness = None
            self.logger.error(e)

        self.memory = ALProxy('ALMemory')

        self.isRunning = False
        self.trackedHuman = -1

        import threading
        self.subscribingLock = threading.Lock()

        self.BIND_PYTHON(self.getName(), "setParameter")


    def onUnload(self):
        if self.isRunning:
            if self.awareness:
                self.awareness.stopAwareness()
                self.setALMemorySubscription(False)
            self.isRunning = False


    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do

        self.isRunning = True
        self.trackedHuman = -1
        if self.awareness:
            self.awareness.setEngagementMode(self.getParameter('Engagement Mode'))
            self.awareness.setTrackingMode(self.getParameter('Tracking Mode'))
            self.awareness.setStimulusDetectionEnabled('Sound', self.getParameter('Sound Stimulus'))
            self.awareness.setStimulusDetectionEnabled('Movement', self.getParameter('Movement Stimulus'))
            self.awareness.setStimulusDetectionEnabled('People', self.getParameter('People Stimulus'))
            self.awareness.setStimulusDetectionEnabled('Touch', self.getParameter('Touch Stimulus'))
            self.setALMemorySubscription(True)
            self.awareness.startAwareness()



    def onInput_onStop(self):
        if not self.isRunning:
            return # already stopped, nothing to do

        self.onUnload()
        self.onStopped()


    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if self.awareness:
            if parameterName == 'Sound Stimulus':
                self.awareness.setStimulusDetectionEnabled('Sound', newValue)
            elif parameterName == 'Movement Stimulus':
                self.awareness.setStimulusDetectionEnabled('Movement', newValue)
            elif parameterName == 'People Stimulus':
                self.awareness.setStimulusDetectionEnabled('People', newValue)
            elif parameterName == 'Touch Stimulus':
                self.awareness.setStimulusDetectionEnabled('Touch', newValue)


    # callbacks for ALBasicAwareness events
    def onStimulusDetected(self, eventName, stimulusName, subscriberIdentifier):
        self.StimulusDetected(stimulusName)

    def onHumanTracked(self, eventName, humanID, subscriberIdentifier):
        self.trackedHuman = humanID
        self.HumanTracked(humanID)

    def onHumanLost(self, eventName, subscriberIdentifier):
        self.HumanLost(self.trackedHuman)
        self.trackedHuman = -1


    def setALMemorySubscription(self, subscribe):
        self.subscribingLock.acquire()
        if subscribe:
            self.memory.subscribeToEvent('ALBasicAwareness/StimulusDetected', self.getName(), 'onStimulusDetected')
            self.memory.subscribeToEvent('ALBasicAwareness/HumanTracked', self.getName(), 'onHumanTracked')
            self.memory.subscribeToEvent('ALBasicAwareness/HumanLost', self.getName(), 'onHumanLost')
        else:
            self.memory.unsubscribeToEvent('ALBasicAwareness/StimulusDetected', self.getName())
            self.memory.unsubscribeToEvent('ALBasicAwareness/HumanTracked', self.getName())
            self.memory.unsubscribeToEvent('ALBasicAwareness/HumanLost', self.getName())

        self.subscribingLock.release()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the Basic Awareness with the given Engagement and Tracking mode parameters, using the given stimuli." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the Basic Awareness." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="StimulusDetected" type="3" type_size="1" nature="2" inner="0" tooltip="This output is stimulated when BasicAwareness detects a stimulus amongst the tracked stimulus.&#x0A;&#x0A;The output data is the stimulus&apos; name." id="5" /><Output name="HumanTracked" type="2" type_size="1" nature="2" inner="0" tooltip="This output is triggered when ALBasicAwareness detects a stimulus that is confirmed to be a human.&#x0A;&#x0A;The output data is the ID corresponding to the tracked human. It is shared with PeoplePerception and can be used there. This output is triggered with -1 if ALBasicAwareness tried to detect a human but failed." id="6" /><Output name="HumanLost" type="2" type_size="1" nature="2" inner="0" tooltip="This output is triggered when the human currently tracked is lost.&#x0A;&#x0A; The output data is the ID corresponding to the lost human. It can be reused in PeoplePerception." id="7" /><Parameter name="Engagement Mode" inherits_from_parent="0" content_type="3" value="FullyEngaged" default_value="Unengaged" custom_choice="0" tooltip='The engagement mode specifies how &quot;focused&quot; the robot is on the engaged person.' id="8"><Choice value="Unengaged" /><Choice value="FullyEngaged" /><Choice value="SemiEngaged" /></Parameter><Parameter name="Tracking Mode" inherits_from_parent="1" content_type="3" value="" default_value="" custom_choice="0" tooltip="The tracking mode describes how the robot keeps eye contact with an engaged person." id="9" /><Parameter name="Sound Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="10" /><Parameter name="Movement Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="11" /><Parameter name="People Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="12" /><Parameter name="Touch Stimulus" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="13" /></Box><Box name="Play Sound" id="5" localization="8" tooltip="" x="806" y="20"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="177" y="80"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="3" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Play Sound" id="2" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="422" y="81"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../sounds/enu_ono_ba_lookintoeyes_0%.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="213" y="72"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self, p):
        fname = self.getParameter("File name")
        fname = fname.replace("%", str(p))
        fname = self.framemanager.getBehaviorPath(self.behaviorId) + str(fname)
        self.onStopped( fname )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Only Once" id="3" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="655" y="22"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self, p):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime(p)

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="0" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" /><Output name="firstTime" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="4" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="503" y="120"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="20" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Distraction Box" id="1" localization="8" tooltip="" x="590" y="314"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.atraction = self.getParameter("firstIncrease")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_atract(self):
        if self.atraction == 0:
            self.atraction = self.getParameter("firstIncrease")
        else:
            self.atraction += self.getParameter("atractIncrease")

        self.calculate()

    def onInput_distract(self):
        if self.atraction > self.getParameter("distractionThreshold"):
            self.atraction -= self.getParameter("distractDecrease")

        self.calculate()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box

    def calculate(self):
        #self.logger.info("level: " + str(self.atraction))
        if self.getParameter("enable"):
            if self.atraction <= self.getParameter("distractionThreshold"):
                self.distracted()
            else:
                self.actracted()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="atract" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="distract" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Output name="distracted" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" /><Output name="actracted" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" /><Parameter name="atractIncrease" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="1" max="100" tooltip="" id="8" /><Parameter name="distractDecrease" inherits_from_parent="0" content_type="1" value="2" default_value="2" min="1" max="100" tooltip="" id="9" /><Parameter name="distractionThreshold" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="-100" max="100" tooltip="" id="10" /><Parameter name="firstIncrease" inherits_from_parent="0" content_type="1" value="5" default_value="10" min="0" max="100" tooltip="" id="11" /><Parameter name="enable" inherits_from_parent="1" content_type="0" value="1" default_value="1" tooltip="" id="12" /></Box><Box name="Timer" id="2" localization="8" tooltip="Stimulate output repeatedly with the specified interval.&#x0A;Can be stopped anytime. &#x0A;Stimulating the input again restarts the timer.&#x0A;" x="94" y="21"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.timer = None
        self.first = True

    def onUnload(self):
        self.cancelTimer()

    def cancelTimer(self):
        if self.timer:
            self.timer.stop()
        self.timer = None

    def onTimer(self):
        if not self.first:
            self.timerOutput()
        self.first = False

    def startTimer(self):
        import qi
        self.first = True
        self.timer = qi.PeriodicTask()
        self.timer.setCallback(self.onTimer)
        self.timer.setUsPeriod(int(self.getParameter("Period (s)") * 1000 * 1000))
        self.timer.start(True)

    def onInput_onStart(self):
        self.cancelTimer()
        self.startTimer()

    def onInput_onStop(self):
        if self.timer and self.timer.isRunning():
            self.onStopped()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the box is stopped." id="4" /><Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" /><Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="10" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds).&#x0A;&#x0A;For example, if this parameter is equal to 1s, the timerOutput will be stimulated&#x0A;every second until the onStop input is stimulated." id="6" /></Box><Box name="Switch Case" id="8" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="302" y="413"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("People")):
			self.output_1(p)
		elif(p == self.typeConversion("Touch")):
			self.output_2(p)
		elif(p == self.typeConversion("TabletTouch")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>&quot;People&quot;</keyword><keyword>&quot;Touch&quot;</keyword><keyword>&quot;TabletTouch&quot;</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /></Box><Box name="Only Once (1)" id="7" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="921" y="218"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self, p):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime(p)

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="0" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" /><Output name="firstTime" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="4" /></Box><Box name="Wait (1)" id="9" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="767" y="388"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="60" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Face Recognition" id="10" localization="8" tooltip="" x="136" y="141"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Only Once" id="5" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="314" y="129"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self, p):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime(p)

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="0" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" /><Output name="firstTime" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="4" /></Box><Box name="Face Reco." id="3" localization="8" tooltip="Detect people&apos;s face and recognize those which are known by the robot.&#x0A;&#x0A;Note: the robot needs to learn a face with the Learn Face box before he can recognize it." x="101" y="111"><bitmap>media/images/box/interaction/reco_face.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" /><Output name="onRecognizedFaces" type="3" type_size="1" nature="2" inner="0" tooltip="Names of recognized faces. If several faces are recognized, they are sent one&#x0A;after an other on this output." id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Reco. Det. Faces" id="1" localization="8" tooltip="Process face detection extractor data (FaceDetected) to extract the labels of&#x0A;recognized faces and notify when there is a face detected but not recognized.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;recognized faces change." x="183" y="68"><bitmap>media/images/box/interaction/reco_face.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.timeFilteredResult = [];

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(len(p) > 0):
            if(len(p[1]) > 0): # just in case of the ALValue is in the wrong format
                # get the ALValue returned by the time filtered recognition:
                #    - [] when nothing new.
                #    - [4] when a face has been detected but not recognized during the first 8s.
                #    - [2, [faceName]] when one face has been recognized.
                #    - [3, [faceName1, faceName2, ...]] when several faces have been recognized.
                self.timeFilteredResult = p[1][len(p[1]) -1]
                if( len(self.timeFilteredResult) == 1 ):
                    # If a face has been detected for more than 8s but not recognized
                    if(self.timeFilteredResult[0] == 4):
                        self.onDetectWithoutReco()
                elif( len(self.timeFilteredResult) == 2 ):
                    # If one or several faces have been recognized
                    if(self.timeFilteredResult[0] in [2, 3]):
                        for s in self.timeFilteredResult[1]:
                            self.onRecognizedFace( s )

    def onInput_onStop(self):
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" /><Output name="onRecognizedFace" type="3" type_size="1" nature="1" inner="0" tooltip="Name of recognized face. If several faces are recognized, they are sent one after an&#x0A;other on this output.&#x0A;&#x0A;Note: if it is the wrong face which has been recognized, you have 7s to rename&#x0A;it with the relearn function available on one of  Add/Del Faces sub-boxes (Learn Face&#x0A;box)." id="3" /><Output name="onDetectWithoutReco" type="1" type_size="1" nature="1" inner="0" tooltip="A face has been detected for more than 8s but has not been recognized. It means&#x0A;that the robot does not know this face but it would be a good idea to learn it." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Say Global" id="10" localization="8" tooltip="Say the text received on its input." x="453" y="124"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, x):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p) + " " + str(x)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Hello Human" default_value="" tooltip="" id="5" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="325" y="302"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="10" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="6" /><Link inputowner="10" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="5" indexofinput="3" outputowner="6" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Breath/Idle Set/Reset" id="11" localization="8" tooltip="Stiffen or loosen all motors." x="127" y="424"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.idleEnabled = False
        self.breathEnabled = False

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.idleEnabled = self.motion.getIdlePostureEnabled( self.getParameter("Motors") )
        self.breathEnabled = self.motion.getBreathEnabled( self.getParameter("Motors") )

    def onUnload(self):
        self.onFinished()

    def onInput_onSet(self):
        self.idleEnabled = self.motion.getIdlePostureEnabled( self.getParameter("Motors") )
        self.breathEnabled = self.motion.getBreathEnabled( self.getParameter("Motors") )

        enabled = 'Enabled' in self.getParameter("Action")
        self.idle = self.motion.setIdlePostureEnabled( str(self.getParameter("Motors")), enabled )
        self.breath = self.motion.setBreathEnabled( str(self.getParameter("Motors")), enabled )

        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.motion.setIdlePostureEnabled( str(self.getParameter("Motors")), self.idleEnabled )
        self.motion.setBreathEnabled( str(self.getParameter("Motors")), self.breathEnabled )

        self.onFinished()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="Enabled" default_value="Disabled" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Disabled" /><Choice value="Enabled" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Body" default_value="Body" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="RArm" /><Choice value="Arms" /><Choice value="Body" /><Choice value="Legs" /></Parameter></Box><Box name="QR Code Reader" id="12" localization="8" tooltip="" x="138" y="561"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="BarcodeReader" id="1" localization="8" tooltip="" x="147" y="88"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="BarcodeReader/BarcodeDetected" type="0" type_size="1" nature="4" stm_value_name="BarcodeReader/BarcodeDetected" inner="1" tooltip="BarcodeReader/BarcodeDetected desc" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Output name="output" type="0" type_size="1" nature="2" inner="0" tooltip="" id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="GetBarcodeContent" id="1" localization="8" tooltip="" x="578" y="167"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.barcodeService = ALProxy("ALBarcodeReader")
        self.lastValues = []

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.barcodeService.pause(False)
        self.barcodeService.setActiveCamera(0)
        self.barcodeService.setFrameRate(2)
        self.barcodeService.setResolution(4)

    def onInput_onBarcode(self, data):
        values = []
        for qrcode in data:
            value = qrcode[0]
            if value not in values:
                values.append( value )

        self.output( values )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="onBarcode" type="0" type_size="1" nature="1" inner="0" tooltip="" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Output name="output" type="0" type_size="1" nature="2" inner="0" tooltip="" id="6" /></Box><Link inputowner="1" indexofinput="4" outputowner="0" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="6" /><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="NewDataFilter" id="2" localization="8" tooltip="" x="499" y="348"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[from time import time as timesec
import json

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.memKey = "qrcode/store"
        self.timediff = 1800
        self.lastValues = {}
        self.storeFile = "/home/nao/qrcodestore"

        f = open( self.storeFile, 'r' )
        self.lastValues = json.load(f)
        f.close()

    def onUnload(self):
        f = open( self.storeFile, 'w+' )
        json.dump( self.lastValues, f )
        f.close()


    def onInput_onStart(self, values):
        newData = []
        for value in values:

            if value in self.lastValues.keys():
                self.logger.info( [value, round(timesec()) - self.lastValues[value], round(timesec()), self.lastValues[value], ] )

            if value not in self.lastValues.keys() or round(timesec()) - self.lastValues[value] >= self.timediff:
                self.lastValues[value] = round(timesec())
                newData.append(value)

        if len(newData) > 0:
            self.onDataChange( newData )
        else:
            self.onNoData()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="onNoData" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Output name="onDataChange" type="0" type_size="1" nature="2" inner="0" tooltip="" id="6" /></Box><Box name="DataCollector" id="4" localization="8" tooltip="" x="320" y="90"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="output" type="0" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="" id="6" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="DataCollector" id="3" localization="8" tooltip="" x="501" y="76"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.dataCollection = []

    def onUnload(self):
        self.dataCollection = []

    def onInput_onStart(self, data):
        for value in data:
            if value not in self.dataCollection:
                self.dataCollection.append(value)

    def onInput_onStop(self):
        self.onStopped(self.dataCollection) #activate the output of the box
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Timer" id="5" localization="8" tooltip="Stimulate output repeatedly with the specified interval.&#x0A;Can be stopped anytime. &#x0A;Stimulating the input again restarts the timer.&#x0A;" x="321" y="187"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.timer = None

    def onUnload(self):
        self.cancelTimer()

    def cancelTimer(self):
        if self.timer:
            self.timer.stop()
        self.timer = None

    def onTimer(self):
        self.timerOutput()

    def startTimer(self):
        import qi
        self.timer = qi.PeriodicTask()
        self.timer.setCallback(self.onTimer)
        self.timer.setUsPeriod(int(self.getParameter("Period (s)") * 1000 * 1000))
        self.timer.start(True)

    def onInput_onStart(self):
        self.cancelTimer()
        self.startTimer()

    def onInput_onStop(self):
        if self.timer and self.timer.isRunning():
            self.onStopped()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the box is stopped." id="4" /><Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" /><Parameter name="Period (s)" inherits_from_parent="1" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds).&#x0A;&#x0A;For example, if this parameter is equal to 1s, the timerOutput will be stimulated&#x0A;every second until the onStop input is stimulated." id="6" /></Box><Box name="Only Once" id="1" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="101" y="176"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" /></Box><Link inputowner="0" indexofinput="5" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="3" outputowner="5" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="SayTextPrepare" id="3" localization="8" tooltip="" x="674" y="338"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, names):
        text = self.getParameter("Text")
        namesText = ", ".join(names)

        if "%" in text:
            text = text.replace("%", namesText)
        else:
            text += " " + namesText

        self.onStopped( text )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Hallo %" default_value="" tooltip="" id="5" /></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="865" y="335"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        p = str( p )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /></Box><Box name="Only Once" id="5" localization="8" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is.&#x0A;&#x0A;Note: It is reset when the diagram containing the box is unloaded." x="485" y="81"><bitmap>media/images/box/loop.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self, p):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime(p)

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSignal" type="0" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" /><Output name="firstTime" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="4" /></Box><Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="5" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="5" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="5" indexofinput="3" outputowner="2" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Blink" id="13" localization="8" tooltip="" x="257" y="544"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Blink" id="1" localization="8" tooltip="This box makes the robot blink once." x="181" y="66"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.post.fadeRGB( "FaceLed0", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed1", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration )
        self.leds.post.fadeRGB( "FaceLed3", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed4", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed5", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="199" y="238"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="6" /><Link inputowner="3" indexofinput="3" outputowner="4" indexofoutput="7" /><Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="6" /><Link inputowner="3" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="3" outputowner="4" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="6" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="6" /><Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="6" /><Link inputowner="7" indexofinput="3" outputowner="9" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="7" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="6" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="3" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="4" indexofinput="3" outputowner="0" indexofoutput="6" /><Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="10" indexofinput="3" outputowner="0" indexofoutput="6" /><Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Distracted" id="1" localization="8" tooltip="" x="358" y="346"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Move Around" id="1" localization="8" tooltip="" x="317" y="91"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Move To" id="1" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="277" y="64"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        x = self.getParameter("Distance X (m)")
        y = self.getParameter("Distance Y (m)")
        t = self.getParameter("Theta (deg)")

        # generate random values (50% deviation)
        x += round(random.uniform( x-0.5*x, 0.5*x ), 2)
        y += round(random.uniform( y-0.5*y, 0.5*y ), 2)
        t += round(random.uniform( t-0.5*t, 0.5*t ), 1)
        time = round(self.getParameter("Time (s)"), 1)

        if x < -5.0:
            x = -5.0
        elif x > 10.0:
            x = 10.0

        if y < -5.0:
            y = -5.0
        elif y > 5.0:
            y = 5.0

        if t < -180.0:
            t = -180.0
        elif t > 180:
            t = 180.0

        # create negative number
        if x != 0.0 and random.uniform(0.0, 1.0) < 0.2:
            x *= -1.0

        if y != 0.0 and random.uniform(0.0, 1.0) < 0.2:
            y *= -1.0

        if t != 0.0 and random.uniform(0.0, 1.0) < 0.5:
            t *= -1.0

        #self.logger.info("moveTo: " + str((x,y,t, time)))

        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(x, y, t * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(x, y, t * almath.PI / 180, time)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" /><Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" /><Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" /><Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" /><Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="45" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" /><Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" /><Parameter name="Time (s)" inherits_from_parent="0" content_type="2" value="3" default_value="10" min="0.1" max="5000" tooltip="" id="10" /><Resource name="Legs" type="Lock" timeout="0" /></Box><Box name="Wait (1)" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="502" y="65"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[import random
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        vDelay = random.uniform( self.getParameter("Timeout (s) min"), self.getParameter("Timeout (s) max") )
        vDelay = int(vDelay * 1000 * 1000)
        #self.logger.info("wait " + str(vDelay/1000000) + "s")
        self.waiting = qi.async(self.triggerOutput, delay=vDelay)

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s) min" inherits_from_parent="0" content_type="2" value="1" default_value="60" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /><Parameter name="Timeout (s) max" inherits_from_parent="0" content_type="2" value="3" default_value="180" min="0" max="500" tooltip="" id="7" /></Box><Box name="Move To (1)" id="3" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="658" y="60"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        x = self.getParameter("Distance X (m)")
        y = self.getParameter("Distance Y (m)")
        t = self.getParameter("Theta (deg)")

        # generate random values (50% deviation)
        x += round(random.uniform( x-0.5*x, 0.5*x ), 2)
        y += round(random.uniform( y-0.5*y, 0.5*y ), 2)
        t += round(random.uniform( t-0.5*t, 0.5*t ), 1)
        time = round(self.getParameter("Time (s)"), 1)

        if x < -5.0:
            x = -5.0
        elif x > 10.0:
            x = 10.0

        if y < -5.0:
            y = -5.0
        elif y > 5.0:
            y = 5.0

        if t < -180.0:
            t = -180.0
        elif t > 180:
            t = 180.0

        # create negative number
        if x != 0.0 and random.uniform(0.0, 1.0) < 0.2:
            x *= -1.0

        if y != 0.0 and random.uniform(0.0, 1.0) < 0.2:
            y *= -1.0

        if t != 0.0 and random.uniform(0.0, 1.0) < 0.5:
            t *= -1.0

        #self.logger.info("moveTo: " + str((x,y,t, time)))

        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(x, y, t * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(x, y, t * almath.PI / 180, time)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" /><Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" /><Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" /><Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" /><Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" /><Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" /><Parameter name="Time (s)" inherits_from_parent="0" content_type="2" value="8" default_value="10" min="0.1" max="5000" tooltip="" id="10" /><Resource name="Legs" type="Lock" timeout="0" /></Box><Box name="Play Sound (1)" id="5" localization="8" tooltip="" x="284" y="204"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="177" y="80"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Play Sound" id="2" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="422" y="81"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../sounds/lala/lala_%.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="213" y="72"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self, p):
        fname = self.getParameter("File name")
        fname = fname.replace("%", str(p))
        fname = self.framemanager.getBehaviorPath(self.behaviorId) + str(fname)
        #self.logger.info("play file: " + fname)
        self.onStopped( fname )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Wait For Signals" id="4" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="889" y="128"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" /><Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" /><Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" /></Box><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="5" /><Link inputowner="4" indexofinput="3" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Play Sound" id="2" localization="8" tooltip="" x="114" y="88"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="177" y="80"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="2" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Play Sound" id="2" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="422" y="81"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../sounds/enu_ono_ba_human_lost_0%.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="213" y="72"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self, p):
        fname = self.getParameter("File name")
        fname = fname.replace("%", str(p))
        fname = self.framemanager.getBehaviorPath(self.behaviorId) + str(fname)
        self.onStopped( fname )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Golf" id="8" localization="8" tooltip="ID : #04E 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Golf" x="901" y="265"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="170"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe59" index="59"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="157" y="57"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/golf.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="40" value="15.3" /><Key frame="125" value="10.2" /><Key frame="133" value="-5.5" /><Key frame="141" value="7.7" /><Key frame="145" value="3.3" /><Key frame="150" value="3.3" /><Key frame="170" value="-11.3187" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="40" value="0" /><Key frame="59" value="0.5" /><Key frame="81" value="41.4" /><Key frame="125" value="58.2" /><Key frame="145" value="58.2" /><Key frame="150" value="58.2" /><Key frame="170" value="-0.114815" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="40" value="-54.2812" /><Key frame="72" value="-54.2812" /><Key frame="125" value="-36.8431" /><Key frame="133" value="-24" /><Key frame="170" value="-2.80131" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="40" value="0" /><Key frame="54" value="-4.7" /><Key frame="64" value="6.8" /><Key frame="72" value="0" /><Key frame="125" value="0.504522" /><Key frame="170" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="40" value="20.5994" /><Key frame="72" value="20.5994" /><Key frame="125" value="10.3507" /><Key frame="170" value="-0.834514" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="40" value="-75.6164" /><Key frame="81" value="-75.6164" /><Key frame="125" value="-65.2" /><Key frame="141" value="-77.3906" /><Key frame="145" value="-77.3906" /><Key frame="150" value="-77.3906" /><Key frame="170" value="-30.0873" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="40" value="-33.5339" /><Key frame="81" value="-33.5339" /><Key frame="125" value="-89.2" /><Key frame="141" value="-88.6582" /><Key frame="145" value="-88.6582" /><Key frame="150" value="-88.6582" /><Key frame="170" value="-70.7003" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="40" value="0.02" /><Key frame="64" value="0.02" /><Key frame="81" value="0.02" /><Key frame="125" value="0.88" /><Key frame="133" value="0.98" /><Key frame="136" value="0.98" /><Key frame="141" value="0.0252863" /><Key frame="145" value="0.0252863" /><Key frame="150" value="0.0252863" /><Key frame="170" value="0.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="40" value="6.24301" /><Key frame="81" value="6.24301" /><Key frame="125" value="29.7" /><Key frame="133" value="-25.7" /><Key frame="136" value="-25.7" /><Key frame="141" value="-4.6" /><Key frame="145" value="-11.6536" /><Key frame="150" value="-11.6536" /><Key frame="170" value="89.1618" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="40" value="8.78698" /><Key frame="54" value="2.8" /><Key frame="64" value="11.2" /><Key frame="81" value="8.78698" /><Key frame="125" value="17.4" /><Key frame="141" value="17.0236" /><Key frame="145" value="17.0236" /><Key frame="150" value="17.0236" /><Key frame="170" value="8.44191" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="40" value="-38.526" /><Key frame="81" value="-38.526" /><Key frame="125" value="11.6" /><Key frame="141" value="11.1076" /><Key frame="145" value="11.1076" /><Key frame="150" value="11.1076" /><Key frame="170" value="0.509443" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="40" value="62.7" /><Key frame="64" value="62" /><Key frame="81" value="62.7" /><Key frame="97" value="57.922" /><Key frame="109" value="73.8" /><Key frame="125" value="50.2" /><Key frame="140" value="60.7" /><Key frame="150" value="46.4552" /><Key frame="170" value="30.2762" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="40" value="17.6754" /><Key frame="64" value="7.6" /><Key frame="81" value="17.6754" /><Key frame="97" value="52.3577" /><Key frame="125" value="100.5" /><Key frame="150" value="100.45" /><Key frame="170" value="70.8285" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="40" value="0.18" /><Key frame="64" value="0.18" /><Key frame="81" value="0.18" /><Key frame="97" value="0.194447" /><Key frame="109" value="0.02" /><Key frame="125" value="0.21" /><Key frame="150" value="0.204738" /><Key frame="170" value="0.592703" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="40" value="14.1761" /><Key frame="64" value="3.7" /><Key frame="81" value="14.1761" /><Key frame="97" value="27.3323" /><Key frame="125" value="28.9" /><Key frame="150" value="43.6908" /><Key frame="170" value="88.831" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="40" value="-4.62411" /><Key frame="54" value="-17.4" /><Key frame="64" value="-0.5" /><Key frame="81" value="-4.62411" /><Key frame="97" value="-6.38797" /><Key frame="125" value="-7.96282" /><Key frame="150" value="-7.57657" /><Key frame="170" value="-8.16814" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="40" value="42.5196" /><Key frame="64" value="34.8" /><Key frame="81" value="42.5196" /><Key frame="97" value="29.1313" /><Key frame="125" value="-3.3" /><Key frame="150" value="-2.85009" /><Key frame="170" value="-0.35469" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Vacuum" id="5" localization="8" tooltip="ID : #04C 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Mystical" x="901" y="489"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="256"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe25" index="25"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="191" y="111"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File path" inherits_from_parent="0" content_type="4" value="/vacuum1.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /><Resource name="Audio player" type="Stop on demand" timeout="0" /></Box><Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="34" value="6.9" /><Key frame="51" value="13.1096" /><Key frame="68" value="8.4" /><Key frame="88" value="13.1096" /><Key frame="108" value="7.3" /><Key frame="128" value="13.1096" /><Key frame="148" value="7.3" /><Key frame="160" value="13.1096" /><Key frame="180" value="7.3" /><Key frame="201" value="13.1096" /><Key frame="215" value="13.0957" /><Key frame="256" value="-12.041" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="34" value="46.1211" /><Key frame="51" value="46.1467" /><Key frame="68" value="46.1467" /><Key frame="88" value="46.1467" /><Key frame="108" value="46.1467" /><Key frame="128" value="46.1467" /><Key frame="148" value="46.1467" /><Key frame="160" value="46.1467" /><Key frame="180" value="46.1467" /><Key frame="201" value="46.1467" /><Key frame="215" value="46.4062" /><Key frame="256" value="-0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="34" value="-25.9118" /><Key frame="51" value="-25.6922" /><Key frame="68" value="-25.6922" /><Key frame="88" value="-25.6922" /><Key frame="108" value="-25.6922" /><Key frame="128" value="-25.6922" /><Key frame="148" value="-25.6922" /><Key frame="160" value="-25.6922" /><Key frame="180" value="-25.6922" /><Key frame="201" value="-25.6922" /><Key frame="215" value="-26.543" /><Key frame="256" value="-1.58204" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="34" value="14.3815" /><Key frame="51" value="11" /><Key frame="68" value="20" /><Key frame="88" value="14.2509" /><Key frame="108" value="20" /><Key frame="128" value="14.2509" /><Key frame="148" value="20" /><Key frame="160" value="14.2509" /><Key frame="180" value="20" /><Key frame="201" value="14.2509" /><Key frame="215" value="13.4473" /><Key frame="256" value="0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="34" value="8.80359" /><Key frame="51" value="8.96485" /><Key frame="68" value="8.96485" /><Key frame="88" value="8.96485" /><Key frame="108" value="8.96485" /><Key frame="128" value="8.96485" /><Key frame="148" value="8.96485" /><Key frame="160" value="8.96485" /><Key frame="180" value="8.96485" /><Key frame="201" value="8.96485" /><Key frame="215" value="8.87695" /><Key frame="256" value="-0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="34" value="-17.9391" /><Key frame="51" value="-18.4443" /><Key frame="68" value="-4.5" /><Key frame="88" value="-18.4443" /><Key frame="108" value="-4.5" /><Key frame="128" value="-18.4443" /><Key frame="148" value="-4.5" /><Key frame="160" value="-18.4443" /><Key frame="180" value="-4.5" /><Key frame="201" value="-18.4443" /><Key frame="215" value="-18.2812" /><Key frame="256" value="-29.7949" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="34" value="-118.997" /><Key frame="51" value="-118.818" /><Key frame="68" value="-118.818" /><Key frame="88" value="-118.818" /><Key frame="108" value="-118.818" /><Key frame="128" value="-118.818" /><Key frame="148" value="-118.818" /><Key frame="160" value="-118.818" /><Key frame="180" value="-118.818" /><Key frame="201" value="-118.818" /><Key frame="215" value="-118.74" /><Key frame="256" value="-70.5762" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="34" value="0.71" /><Key frame="51" value="0.704153" /><Key frame="68" value="0.704153" /><Key frame="88" value="0.704153" /><Key frame="108" value="0.704153" /><Key frame="128" value="0.704153" /><Key frame="148" value="0.704153" /><Key frame="160" value="0.704153" /><Key frame="180" value="0.704153" /><Key frame="201" value="0.704153" /><Key frame="215" value="0.702988" /><Key frame="256" value="0.605448" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="34" value="60.2622" /><Key frame="51" value="53.5" /><Key frame="68" value="60.8236" /><Key frame="88" value="74.6" /><Key frame="108" value="60.8236" /><Key frame="128" value="74.6" /><Key frame="148" value="60.8236" /><Key frame="160" value="74.6" /><Key frame="180" value="60.8236" /><Key frame="201" value="74.6" /><Key frame="215" value="74.6191" /><Key frame="256" value="90" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="34" value="16.5896" /><Key frame="51" value="8.2" /><Key frame="68" value="37.4272" /><Key frame="88" value="12.8" /><Key frame="108" value="37.4272" /><Key frame="128" value="12.8" /><Key frame="148" value="37.4272" /><Key frame="160" value="12.8" /><Key frame="180" value="37.4272" /><Key frame="201" value="12.8" /><Key frame="215" value="12.9199" /><Key frame="256" value="8.61328" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="34" value="-12.7355" /><Key frame="51" value="-12.196" /><Key frame="68" value="-12.196" /><Key frame="88" value="-12.196" /><Key frame="108" value="-12.196" /><Key frame="128" value="-12.196" /><Key frame="148" value="-12.196" /><Key frame="160" value="-12.196" /><Key frame="180" value="-12.196" /><Key frame="201" value="-12.196" /><Key frame="215" value="-11.9557" /><Key frame="256" value="-1.145" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="34" value="53.2991" /><Key frame="51" value="52.8664" /><Key frame="68" value="52.16" /><Key frame="88" value="52.8664" /><Key frame="108" value="52.16" /><Key frame="128" value="52.8664" /><Key frame="148" value="52.16" /><Key frame="160" value="52.8664" /><Key frame="180" value="52.16" /><Key frame="201" value="52.8664" /><Key frame="215" value="52.5586" /><Key frame="256" value="29.5313" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="34" value="16.8631" /><Key frame="51" value="36" /><Key frame="68" value="16.8809" /><Key frame="88" value="36" /><Key frame="108" value="16.8809" /><Key frame="128" value="36" /><Key frame="148" value="16.8809" /><Key frame="160" value="36" /><Key frame="180" value="16.8809" /><Key frame="201" value="36" /><Key frame="215" value="35.7715" /><Key frame="256" value="70.0488" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="34" value="0.609393" /><Key frame="51" value="0.609393" /><Key frame="68" value="0.609393" /><Key frame="88" value="0.609393" /><Key frame="108" value="0.609393" /><Key frame="128" value="0.609393" /><Key frame="148" value="0.609393" /><Key frame="160" value="0.609393" /><Key frame="180" value="0.609393" /><Key frame="201" value="0.609393" /><Key frame="215" value="0.601054" /><Key frame="256" value="0.601933" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="34" value="47.764" /><Key frame="51" value="72" /><Key frame="68" value="49.6378" /><Key frame="88" value="72" /><Key frame="108" value="49.6378" /><Key frame="128" value="72" /><Key frame="148" value="49.6378" /><Key frame="160" value="72" /><Key frame="180" value="49.6378" /><Key frame="201" value="72" /><Key frame="215" value="71.9824" /><Key frame="256" value="89.8242" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="34" value="-6.34558" /><Key frame="51" value="-20.7" /><Key frame="68" value="-4.31767" /><Key frame="88" value="-20.7" /><Key frame="108" value="-4.31767" /><Key frame="128" value="-20.7" /><Key frame="148" value="-4.31767" /><Key frame="160" value="-20.7" /><Key frame="180" value="-4.31767" /><Key frame="201" value="-20.7" /><Key frame="215" value="-20.127" /><Key frame="256" value="-8.61328" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="34" value="0.586875" /><Key frame="51" value="0.586875" /><Key frame="68" value="0.586875" /><Key frame="88" value="0.586875" /><Key frame="108" value="0.586875" /><Key frame="128" value="0.586875" /><Key frame="148" value="0.586875" /><Key frame="160" value="0.586875" /><Key frame="180" value="0.586875" /><Key frame="201" value="0.586875" /><Key frame="215" value="-0.0902951" /><Key frame="256" value="-0.705531" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Saxophone" id="6" localization="8" tooltip="ID : #04D 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Saxophone" x="910" y="375"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="262"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe40" index="40"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="156" y="75"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/epicsax.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><BehaviorLayer name="behavior_layer2"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Move To" id="1" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="161" y="82"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" /><Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" /><Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" /><Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" /><Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="-30" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" /><Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" /><Resource name="Legs" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="keyframe1_copy" index="261"><Diagram><Box name="Move To" id="1" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="161" y="82"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" /><Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" /><Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" /><Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" /><Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="-30" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" /><Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" /><Resource name="Legs" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="38" value="-17.3872" /><Key frame="44" value="-1.73009" /><Key frame="50" value="-17.3872" /><Key frame="56" value="-1.73009" /><Key frame="62" value="-17.3872" /><Key frame="68" value="-1.73009" /><Key frame="74" value="-17.3872" /><Key frame="80" value="-1.73009" /><Key frame="86" value="-17.3872" /><Key frame="92" value="-1.73009" /><Key frame="98" value="-17.3872" /><Key frame="104" value="-1.73009" /><Key frame="110" value="-17.3872" /><Key frame="116" value="-1.73009" /><Key frame="122" value="-17.3872" /><Key frame="128" value="-1.73009" /><Key frame="134" value="-17.3872" /><Key frame="140" value="-1.73009" /><Key frame="146" value="-17.3872" /><Key frame="152" value="-1.73009" /><Key frame="158" value="-17.3872" /><Key frame="164" value="-1.73009" /><Key frame="170" value="-17.3872" /><Key frame="176" value="-1.73009" /><Key frame="182" value="-17.3872" /><Key frame="188" value="-1.73009" /><Key frame="194" value="-17.3872" /><Key frame="200" value="-1.73009" /><Key frame="206" value="-17.3872" /><Key frame="212" value="-1.73009" /><Key frame="218" value="-17.3872" /><Key frame="225" value="-1.73009" /><Key frame="262" value="-11.542" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="38" value="-10.7012" /><Key frame="44" value="-10.7012" /><Key frame="50" value="-10.7012" /><Key frame="56" value="-10.7012" /><Key frame="62" value="-10.7012" /><Key frame="68" value="-10.7012" /><Key frame="74" value="-10.7012" /><Key frame="80" value="-10.7012" /><Key frame="86" value="-10.7012" /><Key frame="92" value="-10.7012" /><Key frame="98" value="-10.7012" /><Key frame="104" value="-10.7012" /><Key frame="110" value="-10.7012" /><Key frame="116" value="-10.7012" /><Key frame="122" value="-10.7012" /><Key frame="128" value="-10.7012" /><Key frame="134" value="-10.7012" /><Key frame="140" value="-10.7012" /><Key frame="146" value="-10.7012" /><Key frame="152" value="-10.7012" /><Key frame="158" value="-10.7012" /><Key frame="164" value="-10.7012" /><Key frame="170" value="-10.7012" /><Key frame="176" value="-10.7012" /><Key frame="182" value="-10.7012" /><Key frame="188" value="-10.7012" /><Key frame="194" value="-10.7012" /><Key frame="200" value="-10.7012" /><Key frame="206" value="-10.7012" /><Key frame="212" value="-10.7012" /><Key frame="218" value="-10.7012" /><Key frame="225" value="-10.7012" /><Key frame="262" value="-0.157148" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="38" value="4.07983" /><Key frame="44" value="15.0558" /><Key frame="50" value="4.07983" /><Key frame="56" value="15.0558" /><Key frame="62" value="4.07983" /><Key frame="68" value="15.0558" /><Key frame="74" value="4.07983" /><Key frame="80" value="15.0558" /><Key frame="86" value="4.07983" /><Key frame="92" value="15.0558" /><Key frame="98" value="4.07983" /><Key frame="104" value="15.0558" /><Key frame="110" value="4.07983" /><Key frame="116" value="15.0558" /><Key frame="122" value="4.07983" /><Key frame="128" value="15.0558" /><Key frame="134" value="4.07983" /><Key frame="140" value="15.0558" /><Key frame="146" value="4.07983" /><Key frame="152" value="15.0558" /><Key frame="158" value="4.07983" /><Key frame="164" value="15.0558" /><Key frame="170" value="4.07983" /><Key frame="176" value="15.0558" /><Key frame="182" value="4.07983" /><Key frame="188" value="15.0558" /><Key frame="194" value="4.07983" /><Key frame="200" value="15.0558" /><Key frame="206" value="4.07983" /><Key frame="212" value="15.0558" /><Key frame="218" value="4.07983" /><Key frame="225" value="15.0558" /><Key frame="262" value="-2.16713" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="38" value="4.92482" /><Key frame="44" value="4.92482" /><Key frame="50" value="4.92482" /><Key frame="56" value="4.92482" /><Key frame="62" value="4.92482" /><Key frame="68" value="4.92482" /><Key frame="74" value="4.92482" /><Key frame="80" value="4.92482" /><Key frame="92" value="-5" /><Key frame="134" value="-4.22856" /><Key frame="146" value="4.92482" /><Key frame="158" value="4.92482" /><Key frame="164" value="4.92482" /><Key frame="170" value="4.92482" /><Key frame="176" value="4.92482" /><Key frame="182" value="4.92482" /><Key frame="188" value="4.92482" /><Key frame="194" value="4.92482" /><Key frame="200" value="4.92482" /><Key frame="206" value="4.92482" /><Key frame="212" value="4.92482" /><Key frame="218" value="4.92482" /><Key frame="225" value="4.92482" /><Key frame="262" value="0.350545" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="38" value="-2.06455" /><Key frame="44" value="-3.72545" /><Key frame="50" value="-2.06455" /><Key frame="56" value="-3.72545" /><Key frame="62" value="-2.06455" /><Key frame="68" value="-3.72545" /><Key frame="74" value="-2.06455" /><Key frame="80" value="-3.72545" /><Key frame="86" value="-2.06455" /><Key frame="92" value="-3.72545" /><Key frame="98" value="-2.06455" /><Key frame="104" value="-3.72545" /><Key frame="110" value="-2.06455" /><Key frame="116" value="-3.72545" /><Key frame="122" value="-2.06455" /><Key frame="128" value="-3.72545" /><Key frame="134" value="-2.06455" /><Key frame="140" value="-3.72545" /><Key frame="146" value="-2.06455" /><Key frame="152" value="-3.72545" /><Key frame="158" value="-2.06455" /><Key frame="164" value="-3.72545" /><Key frame="170" value="-2.06455" /><Key frame="176" value="-3.72545" /><Key frame="182" value="-2.06455" /><Key frame="188" value="-3.72545" /><Key frame="194" value="-2.06455" /><Key frame="200" value="-3.72545" /><Key frame="206" value="-2.06455" /><Key frame="212" value="-3.72545" /><Key frame="218" value="-2.06455" /><Key frame="225" value="-3.72545" /><Key frame="262" value="-0.550187" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="38" value="-69.0474" /><Key frame="44" value="-69.0474" /><Key frame="50" value="-69.0474" /><Key frame="56" value="-69.0474" /><Key frame="62" value="-69.0474" /><Key frame="68" value="-69.0474" /><Key frame="74" value="-69.0474" /><Key frame="80" value="-69.0474" /><Key frame="86" value="-69.0474" /><Key frame="92" value="-69.0474" /><Key frame="98" value="-69.0474" /><Key frame="104" value="-69.0474" /><Key frame="110" value="-69.0474" /><Key frame="116" value="-69.0474" /><Key frame="122" value="-69.0474" /><Key frame="128" value="-69.0474" /><Key frame="134" value="-69.0474" /><Key frame="140" value="-69.0474" /><Key frame="146" value="-69.0474" /><Key frame="152" value="-69.0474" /><Key frame="158" value="-69.0474" /><Key frame="164" value="-69.0474" /><Key frame="170" value="-69.0474" /><Key frame="176" value="-69.0474" /><Key frame="182" value="-69.0474" /><Key frame="188" value="-69.0474" /><Key frame="194" value="-69.0474" /><Key frame="200" value="-69.0474" /><Key frame="206" value="-69.0474" /><Key frame="212" value="-69.0474" /><Key frame="218" value="-69.0474" /><Key frame="225" value="-69.0474" /><Key frame="262" value="-30.5073" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="38" value="-26.7222" /><Key frame="44" value="-15.2352" /><Key frame="50" value="-26.7222" /><Key frame="56" value="-15.2352" /><Key frame="62" value="-26.7222" /><Key frame="68" value="-15.2352" /><Key frame="74" value="-26.7222" /><Key frame="80" value="-15.2352" /><Key frame="86" value="-26.7222" /><Key frame="92" value="-15.2352" /><Key frame="98" value="-26.7222" /><Key frame="104" value="-15.2352" /><Key frame="110" value="-26.7222" /><Key frame="116" value="-15.2352" /><Key frame="122" value="-26.7222" /><Key frame="128" value="-15.2352" /><Key frame="134" value="-26.7222" /><Key frame="140" value="-15.2352" /><Key frame="146" value="-26.7222" /><Key frame="152" value="-15.2352" /><Key frame="158" value="-26.7222" /><Key frame="164" value="-15.2352" /><Key frame="170" value="-26.7222" /><Key frame="176" value="-15.2352" /><Key frame="182" value="-26.7222" /><Key frame="188" value="-15.2352" /><Key frame="194" value="-26.7222" /><Key frame="200" value="-15.2352" /><Key frame="206" value="-26.7222" /><Key frame="212" value="-15.2352" /><Key frame="218" value="-26.7222" /><Key frame="225" value="-15.2352" /><Key frame="262" value="-70.3438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="38" value="0.41" /><Key frame="44" value="0.2" /><Key frame="50" value="0.41" /><Key frame="56" value="0.2" /><Key frame="62" value="0.41" /><Key frame="68" value="0.2" /><Key frame="74" value="0.41" /><Key frame="80" value="0.2" /><Key frame="86" value="0.41" /><Key frame="92" value="0.2" /><Key frame="98" value="0.41" /><Key frame="104" value="0.2" /><Key frame="110" value="0.41" /><Key frame="116" value="0.2" /><Key frame="122" value="0.41" /><Key frame="128" value="0.2" /><Key frame="134" value="0.41" /><Key frame="140" value="0.2" /><Key frame="146" value="0.41" /><Key frame="152" value="0.2" /><Key frame="158" value="0.41" /><Key frame="164" value="0.2" /><Key frame="170" value="0.41" /><Key frame="176" value="0.2" /><Key frame="182" value="0.41" /><Key frame="188" value="0.2" /><Key frame="194" value="0.41" /><Key frame="200" value="0.2" /><Key frame="206" value="0.41" /><Key frame="212" value="0.2" /><Key frame="218" value="0.41" /><Key frame="225" value="0.2" /><Key frame="262" value="0.597894" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="38" value="-16.0345" /><Key frame="44" value="0.419685" /><Key frame="50" value="-16.0345" /><Key frame="56" value="0.419685" /><Key frame="62" value="-16.0345" /><Key frame="68" value="0.419685" /><Key frame="74" value="-16.0345" /><Key frame="80" value="0.419685" /><Key frame="86" value="-16.0345" /><Key frame="92" value="0.419685" /><Key frame="98" value="-16.0345" /><Key frame="104" value="0.419685" /><Key frame="110" value="-16.0345" /><Key frame="116" value="0.419685" /><Key frame="122" value="-16.0345" /><Key frame="128" value="0.419685" /><Key frame="134" value="-16.0345" /><Key frame="140" value="0.419685" /><Key frame="146" value="-16.0345" /><Key frame="152" value="0.419685" /><Key frame="158" value="-16.0345" /><Key frame="164" value="0.419685" /><Key frame="170" value="-16.0345" /><Key frame="176" value="0.419685" /><Key frame="182" value="-16.0345" /><Key frame="188" value="0.419685" /><Key frame="194" value="-16.0345" /><Key frame="200" value="0.419685" /><Key frame="206" value="-16.0345" /><Key frame="212" value="0.419685" /><Key frame="218" value="-16.0345" /><Key frame="225" value="0.419685" /><Key frame="262" value="89.344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="38" value="2.68307" /><Key frame="44" value="2.68307" /><Key frame="50" value="2.68307" /><Key frame="56" value="2.68307" /><Key frame="62" value="2.68307" /><Key frame="68" value="2.68307" /><Key frame="74" value="2.68307" /><Key frame="80" value="2.68307" /><Key frame="86" value="2.68307" /><Key frame="92" value="2.68307" /><Key frame="98" value="2.68307" /><Key frame="104" value="2.68307" /><Key frame="110" value="2.68307" /><Key frame="116" value="2.68307" /><Key frame="122" value="2.68307" /><Key frame="128" value="2.68307" /><Key frame="134" value="2.68307" /><Key frame="140" value="2.68307" /><Key frame="146" value="2.68307" /><Key frame="152" value="2.68307" /><Key frame="158" value="2.68307" /><Key frame="164" value="2.68307" /><Key frame="170" value="2.68307" /><Key frame="176" value="2.68307" /><Key frame="182" value="2.68307" /><Key frame="188" value="2.68307" /><Key frame="194" value="2.68307" /><Key frame="200" value="2.68307" /><Key frame="206" value="2.68307" /><Key frame="212" value="2.68307" /><Key frame="218" value="2.68307" /><Key frame="225" value="2.68307" /><Key frame="262" value="8.50714" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="38" value="-66.4386" /><Key frame="44" value="-66.4386" /><Key frame="50" value="-66.4386" /><Key frame="56" value="-66.4386" /><Key frame="62" value="-66.4386" /><Key frame="68" value="-66.4386" /><Key frame="74" value="-66.4386" /><Key frame="80" value="-66.4386" /><Key frame="86" value="-66.4386" /><Key frame="92" value="-66.4386" /><Key frame="98" value="-66.4386" /><Key frame="104" value="-66.4386" /><Key frame="110" value="-66.4386" /><Key frame="116" value="-66.4386" /><Key frame="122" value="-66.4386" /><Key frame="128" value="-66.4386" /><Key frame="134" value="-66.4386" /><Key frame="140" value="-66.4386" /><Key frame="146" value="-66.4386" /><Key frame="152" value="-66.4386" /><Key frame="158" value="-66.4386" /><Key frame="164" value="-66.4386" /><Key frame="170" value="-66.4386" /><Key frame="176" value="-66.4386" /><Key frame="182" value="-66.4386" /><Key frame="188" value="-66.4386" /><Key frame="194" value="-66.4386" /><Key frame="200" value="-66.4386" /><Key frame="206" value="-66.4386" /><Key frame="212" value="-66.4386" /><Key frame="218" value="-66.4386" /><Key frame="225" value="-66.4386" /><Key frame="262" value="-0.202053" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="38" value="78.2778" /><Key frame="44" value="67.3" /><Key frame="50" value="78.2778" /><Key frame="56" value="67.3" /><Key frame="62" value="78.2778" /><Key frame="68" value="67.3" /><Key frame="74" value="78.2778" /><Key frame="80" value="67.3" /><Key frame="86" value="78.2778" /><Key frame="92" value="67.3" /><Key frame="98" value="78.2778" /><Key frame="104" value="67.3" /><Key frame="110" value="78.2778" /><Key frame="116" value="67.3" /><Key frame="122" value="78.2778" /><Key frame="128" value="67.3" /><Key frame="134" value="78.2778" /><Key frame="140" value="67.3" /><Key frame="146" value="78.2778" /><Key frame="152" value="67.3" /><Key frame="158" value="78.2778" /><Key frame="164" value="67.3" /><Key frame="170" value="78.2778" /><Key frame="176" value="67.3" /><Key frame="182" value="78.2778" /><Key frame="188" value="67.3" /><Key frame="194" value="78.2778" /><Key frame="200" value="67.3" /><Key frame="206" value="78.2778" /><Key frame="212" value="67.3" /><Key frame="218" value="78.2778" /><Key frame="225" value="67.3" /><Key frame="262" value="29.9806" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="38" value="71.274" /><Key frame="44" value="71.274" /><Key frame="50" value="71.274" /><Key frame="56" value="71.274" /><Key frame="62" value="71.274" /><Key frame="68" value="71.274" /><Key frame="74" value="71.274" /><Key frame="80" value="71.274" /><Key frame="86" value="71.274" /><Key frame="92" value="71.274" /><Key frame="98" value="71.274" /><Key frame="104" value="71.274" /><Key frame="110" value="71.274" /><Key frame="116" value="71.274" /><Key frame="122" value="71.274" /><Key frame="128" value="71.274" /><Key frame="134" value="71.274" /><Key frame="140" value="71.274" /><Key frame="146" value="71.274" /><Key frame="152" value="71.274" /><Key frame="158" value="71.274" /><Key frame="164" value="71.274" /><Key frame="170" value="71.274" /><Key frame="176" value="71.274" /><Key frame="182" value="71.274" /><Key frame="188" value="71.274" /><Key frame="194" value="71.274" /><Key frame="200" value="71.274" /><Key frame="206" value="71.274" /><Key frame="212" value="71.274" /><Key frame="218" value="71.274" /><Key frame="225" value="71.274" /><Key frame="262" value="70.3758" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="38" value="0.54" /><Key frame="44" value="0.66" /><Key frame="50" value="0.54" /><Key frame="56" value="0.66" /><Key frame="62" value="0.54" /><Key frame="68" value="0.66" /><Key frame="74" value="0.54" /><Key frame="80" value="0.66" /><Key frame="86" value="0.54" /><Key frame="92" value="0.66" /><Key frame="98" value="0.54" /><Key frame="104" value="0.66" /><Key frame="110" value="0.54" /><Key frame="116" value="0.66" /><Key frame="122" value="0.54" /><Key frame="128" value="0.66" /><Key frame="134" value="0.54" /><Key frame="140" value="0.66" /><Key frame="146" value="0.54" /><Key frame="152" value="0.66" /><Key frame="158" value="0.54" /><Key frame="164" value="0.66" /><Key frame="170" value="0.54" /><Key frame="176" value="0.66" /><Key frame="182" value="0.54" /><Key frame="188" value="0.66" /><Key frame="194" value="0.54" /><Key frame="200" value="0.66" /><Key frame="206" value="0.54" /><Key frame="212" value="0.66" /><Key frame="218" value="0.54" /><Key frame="225" value="0.66" /><Key frame="262" value="0.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="38" value="51.5274" /><Key frame="44" value="62.9519" /><Key frame="50" value="51.5274" /><Key frame="56" value="62.9519" /><Key frame="62" value="51.5274" /><Key frame="68" value="62.9519" /><Key frame="74" value="51.5274" /><Key frame="80" value="62.9519" /><Key frame="86" value="51.5274" /><Key frame="92" value="62.9519" /><Key frame="98" value="51.5274" /><Key frame="104" value="62.9519" /><Key frame="110" value="51.5274" /><Key frame="116" value="62.9519" /><Key frame="122" value="51.5274" /><Key frame="128" value="62.9519" /><Key frame="134" value="51.5274" /><Key frame="140" value="62.9519" /><Key frame="146" value="51.5274" /><Key frame="152" value="62.9519" /><Key frame="158" value="51.5274" /><Key frame="164" value="62.9519" /><Key frame="170" value="51.5274" /><Key frame="176" value="62.9519" /><Key frame="182" value="51.5274" /><Key frame="188" value="62.9519" /><Key frame="194" value="51.5274" /><Key frame="200" value="62.9519" /><Key frame="206" value="51.5274" /><Key frame="212" value="62.9519" /><Key frame="218" value="51.5274" /><Key frame="225" value="62.9519" /><Key frame="262" value="88.8733" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="38" value="-8.58942" /><Key frame="44" value="-8.58942" /><Key frame="50" value="-8.58942" /><Key frame="56" value="-8.58942" /><Key frame="62" value="-8.58942" /><Key frame="68" value="-8.58942" /><Key frame="74" value="-8.58942" /><Key frame="80" value="-8.58942" /><Key frame="86" value="-8.58942" /><Key frame="92" value="-8.58942" /><Key frame="98" value="-8.58942" /><Key frame="104" value="-8.58942" /><Key frame="110" value="-8.58942" /><Key frame="116" value="-8.58942" /><Key frame="122" value="-8.58942" /><Key frame="128" value="-8.58942" /><Key frame="134" value="-8.58942" /><Key frame="140" value="-8.58942" /><Key frame="146" value="-8.58942" /><Key frame="152" value="-8.58942" /><Key frame="158" value="-8.58942" /><Key frame="164" value="-8.58942" /><Key frame="170" value="-8.58942" /><Key frame="176" value="-8.58942" /><Key frame="182" value="-8.58942" /><Key frame="188" value="-8.58942" /><Key frame="194" value="-8.58942" /><Key frame="200" value="-8.58942" /><Key frame="206" value="-8.58942" /><Key frame="212" value="-8.58942" /><Key frame="218" value="-8.58942" /><Key frame="225" value="-8.58942" /><Key frame="262" value="-7.95474" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="38" value="0" /><Key frame="44" value="0" /><Key frame="50" value="0" /><Key frame="56" value="0" /><Key frame="62" value="0" /><Key frame="68" value="0" /><Key frame="74" value="0" /><Key frame="80" value="0" /><Key frame="86" value="0" /><Key frame="92" value="0" /><Key frame="98" value="0" /><Key frame="104" value="0" /><Key frame="110" value="0" /><Key frame="116" value="0" /><Key frame="122" value="0" /><Key frame="128" value="0" /><Key frame="134" value="0" /><Key frame="140" value="0" /><Key frame="146" value="0" /><Key frame="152" value="0" /><Key frame="158" value="0" /><Key frame="164" value="0" /><Key frame="170" value="0" /><Key frame="176" value="0" /><Key frame="182" value="0" /><Key frame="188" value="0" /><Key frame="194" value="0" /><Key frame="200" value="0" /><Key frame="206" value="0" /><Key frame="212" value="0" /><Key frame="218" value="0" /><Key frame="225" value="0" /><Key frame="262" value="-0.102843" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Random Int." id="3" localization="8" tooltip="Generate a random integer between a min number and a max number set as&#x0A;parameters.&#x0A;Note that the min and max numbers are included in the range of possible values." x="493" y="123"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nMin = 0
        self.nIndex = self.nMax - self.nMin
        self.aShuffled = []

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("Max value")
        nMin = self.getParameter("Min value")
        if( nMin > nMax ):
            temp = nMin
            nMin = nMax
            nMax = temp
        # if shuffle
        if( self.getParameter("Shuffle") ):
            self.nIndex += 1
            if( self.nIndex > self.nMax - self.nMin or nMax != self.nMax or nMin != self.nMin ):
                self.nMax = nMax
                self.nMin = nMin
                self.nIndex = 0
                self.aShuffled = []
                for i in range( nMin, nMax + 1 ):
                    self.aShuffled.insert( random.randint(0, len(self.aShuffled)), i )
            self.output_RandomValue( self.aShuffled[self.nIndex] )
        # if not shuffle
        else:
            self.nIndex = self.nMax - self.nMin
            self.output_RandomValue( random.randint( nMin, nMax ) )]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Generate a random integer." id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value obtained." id="3" /><Parameter name="Min value" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="1000" tooltip="The minimum value you can get." id="4" /><Parameter name="Max value" inherits_from_parent="0" content_type="1" value="5" default_value="10" min="0" max="1000" tooltip="The maximum number you can get." id="5" /><Parameter name="Shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="When this option is selected the box will give all the numbers between min and&#x0A;max before giving the same number twice." id="6" /></Box><Box name="Switch Case" id="4" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="631" y="162"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="7" /><Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="8" /><Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="9" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Speech Reco. (1)" id="9" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="206" y="8"><bitmap>media/images/box/interaction/ear.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = ALProxy("ALMemory")

    def onLoad(self):
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.setVisualExpression(self.getParameter("Visual expression"))
                self.asr.setAudioExpression(self.getParameter("Audio expression"))
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" /><Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" /><Parameter name="Word list" inherits_from_parent="0" content_type="5" value="wordlist" default_value="" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" /><Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="47" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" /><Parameter name="Visual expression" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Use the LEDs to show feedbacks from the robot during the recognition.&#x0A;&#x0A;For example:&#x0A;- Eyes leds get blue and turn when the speech recognition is launched.&#x0A;- They get yellow when the robot hears someone talking and analyses what it heard.&#x0A;- They flash in green when the robot understood and flash in red otherwise." id="9" /><Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="10" /><Parameter name="Audio expression" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="11" /><Resource name="Speech recognition" type="Lock" timeout="0" /></Box><Box name="Hands" id="17" localization="8" tooltip="" x="364" y="587"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="Tactile L.Hand" id="11" localization="8" tooltip="Detect touch on left hand tactile sensor." x="209" y="170"><bitmap>media/images/box/movement/move_leftarm.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="HLLeftTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftLeftTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="HLBackTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftBackTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Input name="HLRightTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftRightTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" /><Output name="leftTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The left of the left hand was touched." id="8" /><Output name="backTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The back of the left hand was touched." id="9" /><Output name="rightTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The right of the left hand was touched." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="if &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="171" y="142"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="if &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="171" y="39"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="if &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="171" y="246"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="9" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Left arm-sequence" type="Lock" timeout="0" /></Box><Box name="Tactile R.Hand" id="1" localization="8" tooltip="Detect touch on right hand tactile sensor." x="218" y="309"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="HRLeftTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightLeftTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="HRBackTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightBackTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Input name="HRRightTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightRightTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" /><Output name="leftTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The left of the right hand was touched." id="8" /><Output name="backTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The back of the right hand was touched." id="9" /><Output name="rightTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The right of the right hand was touched." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="if &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="157" y="130"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="if &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="157" y="28"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="if &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="157" y="232"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="9" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Right arm-sequence" type="Lock" timeout="0" /></Box><Box name="Motor On/Off" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="440" y="142"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("LArm", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="Off" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4"><Choice value="Off" /><Choice value="On" /></Parameter><Resource name="All motors" type="Lock" timeout="0" /></Box><Box name="Motor On/Off (1)" id="3" localization="8" tooltip="Stiffen or loosen all motors." x="434" y="335"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("RArm", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="Off" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4"><Choice value="Off" /><Choice value="On" /></Parameter><Resource name="All motors" type="Lock" timeout="0" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="435" y="32"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Motor On/Off (2)" id="4" localization="8" tooltip="Stiffen or loosen all motors." x="606" y="39"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("LArm", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4"><Choice value="Off" /><Choice value="On" /></Parameter><Resource name="All motors" type="Lock" timeout="0" /></Box><Box name="Wait (1)" id="5" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="446" y="445"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Motor On/Off (3)" id="7" localization="8" tooltip="Stiffen or loosen all motors." x="592" y="442"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("RArm", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4"><Choice value="Off" /><Choice value="On" /></Parameter><Resource name="All motors" type="Lock" timeout="0" /></Box><Box name="Raise Event" id="8" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="570" y="234"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/attract" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="9" /><Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="8" /><Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="10" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="9" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="8" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="10" /><Link inputowner="6" indexofinput="2" outputowner="11" indexofoutput="8" /><Link inputowner="6" indexofinput="2" outputowner="11" indexofoutput="9" /><Link inputowner="6" indexofinput="2" outputowner="11" indexofoutput="10" /><Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="8" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="9" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="10" /><Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="11" indexofoutput="8" /><Link inputowner="8" indexofinput="2" outputowner="11" indexofoutput="9" /><Link inputowner="8" indexofinput="2" outputowner="11" indexofoutput="10" /><Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="8" /><Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="9" /><Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="10" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Replace Placeholder" id="19" localization="8" tooltip="" x="365" y="74"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        self.onStopped( p.replace(self.getParameter("Placeholder"), ' ').strip() ) #activate the output of the box

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Placeholder" inherits_from_parent="0" content_type="3" value="&lt;...&gt;" default_value="&lt;...&gt;" custom_choice="1" tooltip="" id="5"><Choice value="&lt;...&gt;" /></Parameter></Box><Box name="Speech Answer" id="20" localization="8" tooltip="" x="534" y="60"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="70.7107"><Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="71" y="552"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Hallo")):
			self.output_1(p)
		elif(p == self.typeConversion("Hände schütteln")):
			self.output_2(p)
		elif(p == self.typeConversion("Hand geben")):
			self.output_3(p)
		elif(p == self.typeConversion("geht es dir")):
			self.output_4(p)
		elif(p == self.typeConversion("gehts dir")):
			self.output_5(p)
		elif(p == self.typeConversion("bist du")):
			self.output_6(p)
		elif(p == self.typeConversion("Witz erzählen")):
			self.output_7(p)
		elif(p == self.typeConversion("Wie alt")):
			self.output_8(p)
		elif(p == self.typeConversion("Siri")):
			self.output_9(p)
		elif(p == self.typeConversion("Google")):
			self.output_10(p)
		elif(p == self.typeConversion("Selbstzerstörung")):
			self.output_11(p)
		elif(p == self.typeConversion("du her")):
			self.output_12(p)
		elif(p == self.typeConversion("Tanzen")):
			self.output_13(p)
		elif(p == self.typeConversion("Wetter")):
			self.output_14(p)
		elif(p == self.typeConversion("Spiel")):
			self.output_15(p)
		elif(p == self.typeConversion("Emma")):
			self.output_16(p)
		elif(p == self.typeConversion("anderes")):
			self.output_17(p)
		elif(p == self.typeConversion("klein")):
			self.output_18(p)
		elif(p == self.typeConversion("kleiner")):
			self.output_19(p)
		elif(p == self.typeConversion("Blöder Roboter")):
			self.output_20(p)
		elif(p == self.typeConversion("Halts Maul")):
			self.output_21(p)
		elif(p == self.typeConversion("Moin")):
			self.output_22(p)
		elif(p == self.typeConversion("Hi")):
			self.output_23(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>&quot;Hallo&quot;</keyword><keyword>&quot;Hände schütteln&quot;</keyword><keyword>&quot;Hand geben&quot;</keyword><keyword>&quot;geht es dir&quot;</keyword><keyword>&quot;gehts dir&quot;</keyword><keyword>&quot;bist du&quot;</keyword><keyword>&quot;Witz erzählen&quot;</keyword><keyword>&quot;Wie alt&quot;</keyword><keyword>&quot;Siri&quot;</keyword><keyword>&quot;Google&quot;</keyword><keyword>&quot;Selbstzerstörung&quot;</keyword><keyword>&quot;du her&quot;</keyword><keyword>&quot;Tanzen&quot;</keyword><keyword>&quot;Wetter&quot;</keyword><keyword>&quot;Spiel&quot;</keyword><keyword>&quot;Emma&quot;</keyword><keyword>&quot;anderes&quot;</keyword><keyword>&quot;klein&quot;</keyword><keyword>&quot;kleiner&quot;</keyword><keyword>&quot;Blöder Roboter&quot;</keyword><keyword>&quot;Halts Maul&quot;</keyword><keyword>&quot;Moin&quot;</keyword><keyword>&quot;Hi&quot;</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="16" /><Output name="output_14" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="17" /><Output name="output_15" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="18" /><Output name="output_16" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="19" /><Output name="output_17" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="20" /><Output name="output_18" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="21" /><Output name="output_19" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="22" /><Output name="output_20" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="23" /><Output name="output_21" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="24" /><Output name="output_22" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="25" /><Output name="output_23" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="26" /></Box><Box name="Hello" id="5" localization="8" tooltip="" x="395" y="24"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Hello" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Shake Hands" id="2" localization="8" tooltip="" x="403" y="119"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Shake Hands" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="How are you" id="3" localization="8" tooltip="" x="404" y="222"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="How are you" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Who are you" id="4" localization="8" tooltip="" x="400" y="323"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Who are you" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Joke" id="6" localization="8" tooltip="" x="404" y="429"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Joke" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Age" id="7" localization="8" tooltip="" x="418" y="535"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Age" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Siri" id="8" localization="8" tooltip="" x="415" y="637"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Siri" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Google" id="9" localization="8" tooltip="" x="425" y="740"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Google" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Destroy" id="10" localization="8" tooltip="" x="422" y="838"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Destroy" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="From where" id="11" localization="8" tooltip="" x="436" y="939"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="From Where" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Dance" id="12" localization="8" tooltip="" x="425" y="1044"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Dance" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Weather" id="13" localization="8" tooltip="" x="432" y="1140"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Weather" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Game" id="14" localization="8" tooltip="" x="434" y="1244"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Game" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Max" id="15" localization="8" tooltip="" x="434" y="1344"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Max" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Other" id="16" localization="8" tooltip="" x="439" y="1455"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="other" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Small" id="17" localization="8" tooltip="" x="427" y="1564"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="small" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Stupid Robot" id="18" localization="8" tooltip="" x="428" y="1665"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="stupid robot" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="shut up" id="19" localization="8" tooltip="" x="424" y="1773"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="shut up" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="6" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="7" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="8" /><Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="9" /><Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="10" /><Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="11" /><Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="12" /><Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="13" /><Link inputowner="10" indexofinput="2" outputowner="1" indexofoutput="14" /><Link inputowner="11" indexofinput="2" outputowner="1" indexofoutput="15" /><Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="16" /><Link inputowner="13" indexofinput="2" outputowner="1" indexofoutput="17" /><Link inputowner="14" indexofinput="2" outputowner="1" indexofoutput="18" /><Link inputowner="15" indexofinput="2" outputowner="1" indexofoutput="19" /><Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="20" /><Link inputowner="17" indexofinput="2" outputowner="1" indexofoutput="21" /><Link inputowner="17" indexofinput="2" outputowner="1" indexofoutput="22" /><Link inputowner="18" indexofinput="2" outputowner="1" indexofoutput="23" /><Link inputowner="19" indexofinput="2" outputowner="1" indexofoutput="24" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="25" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="26" /><Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="11" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="13" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="14" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="15" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="16" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="17" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="18" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="19" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Reactions" id="2" localization="8" tooltip="" x="547" y="207"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="50"><Box name="Headbang" id="2" localization="8" tooltip="ID : #04B 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags :&#x0A;- Headbang" x="787" y="499"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="301"><BehaviorLayer name="behavior_layer1" mute="1"><BehaviorKeyframe name="keyframe1_copy" index="1"><Diagram><Box name="mischievous" id="1" localization="8" tooltip="mischievous" x="97" y="36"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        if( self.bIsRunning ):

            return;

        rDuration = 0.3;
        self.bMustStop = False;
        self.bIsRunning = True;

        while( not self.bMustStop ):
            ALLeds.post.fadeRGB( "FaceLed0", 0x060033, rDuration );
            ALLeds.post.fadeRGB( "FaceLed1", 0xf33300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff3300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed3", 0x701a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rDuration );

            #time.sleep( 0.1 );

            ALLeds.post.fadeRGB( "FaceLed0", 0x140000, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed1", 0xff3300, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed3", 0xf51a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed5", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed6", 0x7c0000, rDuration*3 );
            ALLeds.fadeRGB( "FaceLed7", 0x260000, rDuration*3 );

            if( self.bMustStop ):
                break;

        self.bIsRunning = False;
        self.onStopped();

    def onInput_onStop(self):
        self.bMustStop = True;]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="14" value="-12.3072" /><Key frame="23" value="12.4782" /><Key frame="36" value="-17.9323" /><Key frame="50" value="11.7751" /><Key frame="67" value="-17.7565" /><Key frame="80" value="10.6325" /><Key frame="94" value="-10.6373" /><Key frame="112" value="18.1033" /><Key frame="128" value="-13.8893" /><Key frame="145" value="12.5661" /><Key frame="161" value="-19.9538" /><Key frame="179" value="13.5329" /><Key frame="195" value="-18.3718" /><Key frame="212" value="14.8898" /><Key frame="221" value="-22.4847" /><Key frame="229" value="4.80263" /><Key frame="238" value="-15.0151" /><Key frame="246" value="3.78123" /><Key frame="253" value="-11.9858" /><Key frame="261" value="4.55645" /><Key frame="268" value="-5.32874" /><Key frame="278" value="11.5304" /><Key frame="290" value="8.81216" /><Key frame="301" value="-10.1978" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="14" value="-4.92434" /><Key frame="23" value="-4.57277" /><Key frame="36" value="-3.86964" /><Key frame="50" value="-5.53958" /><Key frame="67" value="-3.16651" /><Key frame="80" value="-1.76024" /><Key frame="94" value="-1.23289" /><Key frame="112" value="-3.34229" /><Key frame="128" value="-1.145" /><Key frame="145" value="-2.55126" /><Key frame="161" value="-3.2544" /><Key frame="179" value="-3.95753" /><Key frame="195" value="-5.89115" /><Key frame="212" value="-11.1647" /><Key frame="221" value="-9.49471" /><Key frame="229" value="-4.3091" /><Key frame="238" value="-0.705538" /><Key frame="246" value="-0.00240423" /><Key frame="253" value="-1.84813" /><Key frame="261" value="-2.46337" /><Key frame="268" value="-3.16651" /><Key frame="278" value="1.84332" /><Key frame="301" value="-0.090296" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="22" value="-25.7409" /><Key frame="35" value="-10.3033" /><Key frame="49" value="-25.7409" /><Key frame="66" value="-10.3033" /><Key frame="79" value="-25.7409" /><Key frame="93" value="-10.3033" /><Key frame="111" value="-19.581" /><Key frame="127" value="-10.3033" /><Key frame="144" value="-14.961" /><Key frame="160" value="-10.3033" /><Key frame="178" value="-14.961" /><Key frame="194" value="-10.3033" /><Key frame="211" value="-14.961" /><Key frame="245" value="-10.3033" /><Key frame="277" value="-25.7409" /><Key frame="290" value="-10.3033" /><Key frame="300" value="-2.57699" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="22" value="0" /><Key frame="35" value="0" /><Key frame="49" value="0" /><Key frame="66" value="0" /><Key frame="79" value="0" /><Key frame="93" value="0" /><Key frame="111" value="0" /><Key frame="127" value="0" /><Key frame="144" value="0" /><Key frame="160" value="0" /><Key frame="178" value="0" /><Key frame="194" value="0" /><Key frame="211" value="0" /><Key frame="245" value="0" /><Key frame="277" value="0" /><Key frame="290" value="0" /><Key frame="300" value="-0.00165662" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="22" value="14.0637" /><Key frame="35" value="4.14042" /><Key frame="49" value="14.0637" /><Key frame="66" value="4.14042" /><Key frame="79" value="14.0637" /><Key frame="93" value="4.14042" /><Key frame="111" value="12.5237" /><Key frame="127" value="4.14042" /><Key frame="144" value="9.44376" /><Key frame="160" value="4.14042" /><Key frame="178" value="9.44376" /><Key frame="194" value="4.14042" /><Key frame="211" value="9.44376" /><Key frame="245" value="4.14042" /><Key frame="277" value="14.0637" /><Key frame="290" value="4.14042" /><Key frame="300" value="-0.638153" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="20" value="-29.8808" /><Key frame="33" value="-29.7929" /><Key frame="47" value="-36.209" /><Key frame="64" value="-31.3749" /><Key frame="77" value="-31.8144" /><Key frame="91" value="-56.9514" /><Key frame="109" value="-56.4" /><Key frame="125" value="-78.8413" /><Key frame="142" value="-40.0762" /><Key frame="158" value="-88.5925" /><Key frame="176" value="-29.0019" /><Key frame="192" value="-88.5925" /><Key frame="209" value="-58.5335" /><Key frame="226" value="-66.0043" /><Key frame="243" value="-68.9047" /><Key frame="258" value="-53.6994" /><Key frame="275" value="-72.0688" /><Key frame="298" value="-33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-88.3336" /><Key frame="33" value="-98.2654" /><Key frame="47" value="-102.748" /><Key frame="64" value="-104.242" /><Key frame="77" value="-95.3649" /><Key frame="91" value="-45.8" /><Key frame="109" value="-49.837" /><Key frame="125" value="-25.662" /><Key frame="142" value="-33.7528" /><Key frame="158" value="-80.0718" /><Key frame="176" value="-28.1278" /><Key frame="192" value="-80.0718" /><Key frame="209" value="-66.5364" /><Key frame="226" value="-53.88" /><Key frame="243" value="-53.5285" /><Key frame="258" value="-51.7706" /><Key frame="275" value="-45.3545" /><Key frame="298" value="-69.7005" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0.230571" /><Key frame="33" value="0.230935" /><Key frame="64" value="0.230935" /><Key frame="91" value="0.224389" /><Key frame="109" value="0.618182" /><Key frame="125" value="0.45" /><Key frame="142" value="0.83" /><Key frame="158" value="0.43" /><Key frame="176" value="0.91" /><Key frame="192" value="0.51" /><Key frame="209" value="0.688387" /><Key frame="226" value="0.6992" /><Key frame="243" value="0.6992" /><Key frame="275" value="0.684" /><Key frame="298" value="0.232025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="97.2937" /><Key frame="33" value="96.8543" /><Key frame="47" value="90.5261" /><Key frame="64" value="95.9754" /><Key frame="77" value="92.1081" /><Key frame="91" value="50.4" /><Key frame="109" value="-27.8" /><Key frame="125" value="-65.0375" /><Key frame="142" value="-41.2236" /><Key frame="158" value="-23.5574" /><Key frame="176" value="-54.7589" /><Key frame="192" value="-23.5574" /><Key frame="209" value="47.3" /><Key frame="226" value="76.7271" /><Key frame="243" value="82.44" /><Key frame="258" value="87.0983" /><Key frame="275" value="78.6607" /><Key frame="298" value="91.4929" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="20" value="9.84147" /><Key frame="33" value="10.0173" /><Key frame="47" value="6.85315" /><Key frame="64" value="7.02893" /><Key frame="77" value="6.41369" /><Key frame="91" value="26.2" /><Key frame="109" value="15.2" /><Key frame="125" value="58.1867" /><Key frame="142" value="24.2557" /><Key frame="158" value="64.4222" /><Key frame="176" value="11.072" /><Key frame="192" value="64.4222" /><Key frame="209" value="21.0916" /><Key frame="226" value="23.6405" /><Key frame="243" value="23.8163" /><Key frame="258" value="20.8279" /><Key frame="275" value="23.6405" /><Key frame="298" value="10.0173" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="5.44688" /><Key frame="33" value="5.53477" /><Key frame="64" value="5.44688" /><Key frame="91" value="12.7" /><Key frame="109" value="33" /><Key frame="125" value="7.91266" /><Key frame="142" value="18" /><Key frame="176" value="18.2791" /><Key frame="209" value="16.1697" /><Key frame="226" value="-15.8229" /><Key frame="243" value="-10.8131" /><Key frame="275" value="2.45857" /><Key frame="298" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="21" value="56.9562" /><Key frame="34" value="86.5758" /><Key frame="48" value="50.3644" /><Key frame="65" value="89.5" /><Key frame="78" value="59.593" /><Key frame="92" value="89.5" /><Key frame="110" value="33.2255" /><Key frame="126" value="78.8413" /><Key frame="143" value="34.8075" /><Key frame="159" value="83.4995" /><Key frame="177" value="34.7196" /><Key frame="193" value="88.773" /><Key frame="210" value="38.7627" /><Key frame="227" value="51.1554" /><Key frame="244" value="57.3957" /><Key frame="259" value="45.7061" /><Key frame="276" value="65.0423" /><Key frame="299" value="25.2273" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="12" value="39.1" /><Key frame="21" value="10.2809" /><Key frame="34" value="31.3749" /><Key frame="48" value="10.7204" /><Key frame="65" value="31.9023" /><Key frame="78" value="18.5428" /><Key frame="92" value="31.2871" /><Key frame="110" value="11.6872" /><Key frame="126" value="25.662" /><Key frame="143" value="15.0271" /><Key frame="159" value="38.4942" /><Key frame="177" value="20.4764" /><Key frame="193" value="93.3386" /><Key frame="210" value="5.35899" /><Key frame="227" value="25.8378" /><Key frame="244" value="26.7167" /><Key frame="259" value="29.4413" /><Key frame="276" value="36.6484" /><Key frame="299" value="67.2348" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="12" value="0.57" /><Key frame="21" value="0.745455" /><Key frame="34" value="0.26" /><Key frame="48" value="0.82" /><Key frame="65" value="0.514873" /><Key frame="78" value="0.78" /><Key frame="92" value="0.3" /><Key frame="110" value="0.81" /><Key frame="126" value="0.45" /><Key frame="143" value="0.83" /><Key frame="159" value="0.43" /><Key frame="177" value="0.91" /><Key frame="193" value="0.51" /><Key frame="210" value="0.514873" /><Key frame="227" value="0.6944" /><Key frame="244" value="0.7988" /><Key frame="276" value="0.5424" /><Key frame="299" value="0.410207" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="21" value="-46.3165" /><Key frame="34" value="-64.7738" /><Key frame="48" value="-44.5587" /><Key frame="65" value="-44.7345" /><Key frame="78" value="-48.6017" /><Key frame="92" value="-49.217" /><Key frame="110" value="-64.6859" /><Key frame="126" value="-65.0375" /><Key frame="143" value="-50.4474" /><Key frame="159" value="-57.9182" /><Key frame="177" value="-55.6331" /><Key frame="193" value="9.05525" /><Key frame="210" value="18.3718" /><Key frame="227" value="60.2082" /><Key frame="244" value="66.6243" /><Key frame="259" value="70.4037" /><Key frame="276" value="70.931" /><Key frame="299" value="84.9937" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="21" value="-34.5438" /><Key frame="34" value="-73.6557" /><Key frame="48" value="-31.2919" /><Key frame="65" value="-74.7983" /><Key frame="78" value="-30.2372" /><Key frame="92" value="-80.4233" /><Key frame="110" value="-13.1862" /><Key frame="126" value="-58.1867" /><Key frame="143" value="-22.1511" /><Key frame="159" value="-77.2592" /><Key frame="177" value="-18.7233" /><Key frame="193" value="-51.5948" /><Key frame="210" value="-11.7799" /><Key frame="227" value="-20.7449" /><Key frame="244" value="-23.8211" /><Key frame="259" value="-20.1296" /><Key frame="276" value="-21.2722" /><Key frame="299" value="-7.03374" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="12" value="-10.7" /><Key frame="21" value="-7" /><Key frame="34" value="-6.85796" /><Key frame="65" value="-6.85796" /><Key frame="92" value="-7.4732" /><Key frame="126" value="-7.91266" /><Key frame="143" value="-8.00055" /><Key frame="177" value="-8.35212" /><Key frame="210" value="-12.9225" /><Key frame="227" value="37.9668" /><Key frame="244" value="30.3202" /><Key frame="276" value="5.00743" /><Key frame="299" value="9.22623" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="PointAtSelfRightArm_01" id="48" localization="8" tooltip="ID : #01B 0007&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- Myself&#x0A;- I&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Flex&#x0A;End stance : Center" x="757" y="209"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram /></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="13" value="12.1267" /><Key frame="23" value="-6.85796" /></ActuatorCurve><ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0"><Key frame="12" value="-9.58261" /><Key frame="22" value="-5.27591" /></ActuatorCurve><ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0"><Key frame="12" value="-4.56796" /><Key frame="22" value="-4.2164" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="15" value="-53.3" /><Key frame="25" value="-27.6835" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="15" value="-70.4" /><Key frame="25" value="-73.392" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="15" value="0.19" /><Key frame="25" value="0.6624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0"><Key frame="12" value="-3.95273" /><Key frame="22" value="2.72705" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0"><Key frame="12" value="6.68218" /><Key frame="22" value="4.83644" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0"><Key frame="12" value="-11.6872" /><Key frame="22" value="-9.66569" /></ActuatorCurve><ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0"><Key frame="12" value="24.6073" /><Key frame="22" value="12.4782" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="15" value="76.5" /><Key frame="25" value="86.5709" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="15" value="12.8" /><Key frame="25" value="11.1598" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="15" value="-45.7061" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-4.7632" ordinateParam="-15.8836" /><Tangent side="right" interpType="bezier" abscissaParam="3.17547" ordinateParam="10.5891" /></Key><Key frame="25" value="-21.7117" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.30702" ordinateParam="-5.02698" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0"><Key frame="12" value="-5.79845" /><Key frame="22" value="2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0"><Key frame="12" value="3.43018" /><Key frame="22" value="-0.0854867" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="13" value="49.3" /><Key frame="23" value="88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="13" value="61.346" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.21391" ordinateParam="20.6006" /><Tangent side="right" interpType="bezier" abscissaParam="2.47225" ordinateParam="-15.8466" /></Key><Key frame="23" value="21.5311" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="13" value="1" /><Key frame="23" value="0.45" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0"><Key frame="12" value="1.93121" /><Key frame="22" value="10.9841" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0"><Key frame="12" value="-0.173378" /><Key frame="22" value="2.37549" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0"><Key frame="12" value="-11.6872" /><Key frame="22" value="-9.66569" /></ActuatorCurve><ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0"><Key frame="12" value="15.1198" /><Key frame="22" value="-2.28279" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="13" value="55.9894" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-3.96019" ordinateParam="7.95114" /><Tangent side="right" interpType="bezier" abscissaParam="3.0463" ordinateParam="-6.11625" /></Key><Key frame="23" value="40.8721" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="13" value="-2.11181" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-4.33333" ordinateParam="-6.39629" /><Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="4.92023" /></Key><Key frame="23" value="9.31412" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="13" value="60.2913" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-4.24005" ordinateParam="7.72419" /><Tangent side="right" interpType="bezier" abscissaParam="3.26158" ordinateParam="-5.94168" /></Key><Key frame="23" value="48.338" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Small" id="5" localization="8" tooltip="" x="792" y="796"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Open/Close Both Hands" id="4" localization="8" tooltip="" x="137" y="73"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Open/Close Hand" inherits_from_parent="0" content_type="3" value="Close" default_value="Close" custom_choice="0" tooltip="" id="5"><Choice value="Open" /><Choice value="Close" /></Parameter><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Open/Close Hand" id="8" localization="8" tooltip="" x="468" y="103"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        if 'Open' in self.getParameter("Open/Close Hand"):
            self.motion.openHand( self.getParameter("Hand") )
        else:
            self.motion.closeHand( self.getParameter("Hand") )
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Open/Close Hand" inherits_from_parent="1" content_type="3" value="Open" default_value="Open" custom_choice="0" tooltip="" id="5"><Choice value="Open" /><Choice value="Close" /></Parameter><Parameter name="Hand" inherits_from_parent="0" content_type="3" value="LHand" default_value="LHand" custom_choice="0" tooltip="" id="6"><Choice value="LHand" /><Choice value="RHand" /></Parameter></Box><Box name="Open/Close Hand (1)" id="9" localization="8" tooltip="" x="471" y="226"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        if 'Open' in self.getParameter("Open/Close Hand"):
            self.motion.openHand( self.getParameter("Hand") )
        else:
            self.motion.closeHand( self.getParameter("Hand") )
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Open/Close Hand" inherits_from_parent="1" content_type="3" value="Open" default_value="Open" custom_choice="0" tooltip="" id="5"><Choice value="Open" /><Choice value="Close" /></Parameter><Parameter name="Hand" inherits_from_parent="0" content_type="3" value="RHand" default_value="LHand" custom_choice="0" tooltip="" id="6"><Choice value="LHand" /><Choice value="RHand" /></Parameter></Box><Box name="Wait For Signals" id="1" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="676" y="146"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" /><Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" /><Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" /></Box><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="3" outputowner="9" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Eye LEDs" id="3" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="134" y="198"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4"><Choice value="Both" /><Choice value="Left" /><Choice value="Right" /></Parameter><Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ids = []
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = self.leds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        self.leds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4"><Choice value="Both" /><Choice value="Left" /><Choice value="Right" /></Parameter><Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" /></Box><Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 0, 0])]]></content></script><pluginContent><color>#ff0000</color></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" /><Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" /></Box><Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Eye LEDs (1)" id="1" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="433" y="193"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4"><Choice value="Both" /><Choice value="Left" /><Choice value="Right" /></Parameter><Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ids = []
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = self.leds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        self.leds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4"><Choice value="Both" /><Choice value="Left" /><Choice value="Right" /></Parameter><Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" /></Box><Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]></content></script><pluginContent><color>#ffffff</color></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" /><Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" /></Box><Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="294" y="200"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" /><Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="124" y="83"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Hallo")):
			self.output_1(p)
		elif(p == self.typeConversion("Hände schütteln")):
			self.output_2(p)
		elif(p == self.typeConversion("Hand geben")):
			self.output_3(p)
		elif(p == self.typeConversion("geht es dir")):
			self.output_4(p)
		elif(p == self.typeConversion("gehts dir")):
			self.output_5(p)
		elif(p == self.typeConversion("bist du")):
			self.output_6(p)
		elif(p == self.typeConversion("Witz erzählen")):
			self.output_7(p)
		elif(p == self.typeConversion("Wie alt")):
			self.output_8(p)
		elif(p == self.typeConversion("Siri")):
			self.output_9(p)
		elif(p == self.typeConversion("Google")):
			self.output_10(p)
		elif(p == self.typeConversion("Selbstzerstörung")):
			self.output_11(p)
		elif(p == self.typeConversion("du her")):
			self.output_12(p)
		elif(p == self.typeConversion("Tanzen")):
			self.output_13(p)
		elif(p == self.typeConversion("Wetter")):
			self.output_14(p)
		elif(p == self.typeConversion("Spiel")):
			self.output_15(p)
		elif(p == self.typeConversion("Max")):
			self.output_16(p)
		elif(p == self.typeConversion("anderes")):
			self.output_17(p)
		elif(p == self.typeConversion("klein")):
			self.output_18(p)
		elif(p == self.typeConversion("kleiner")):
			self.output_19(p)
		elif(p == self.typeConversion("Blöder Roboter")):
			self.output_20(p)
		elif(p == self.typeConversion("Halts Maul")):
			self.output_21(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>&quot;Hallo&quot;</keyword><keyword>&quot;Hände schütteln&quot;</keyword><keyword>&quot;Hand geben&quot;</keyword><keyword>&quot;geht es dir&quot;</keyword><keyword>&quot;gehts dir&quot;</keyword><keyword>&quot;bist du&quot;</keyword><keyword>&quot;Witz erzählen&quot;</keyword><keyword>&quot;Wie alt&quot;</keyword><keyword>&quot;Siri&quot;</keyword><keyword>&quot;Google&quot;</keyword><keyword>&quot;Selbstzerstörung&quot;</keyword><keyword>&quot;du her&quot;</keyword><keyword>&quot;Tanzen&quot;</keyword><keyword>&quot;Wetter&quot;</keyword><keyword>&quot;Spiel&quot;</keyword><keyword>&quot;Max&quot;</keyword><keyword>&quot;anderes&quot;</keyword><keyword>&quot;klein&quot;</keyword><keyword>&quot;kleiner&quot;</keyword><keyword>&quot;Blöder Roboter&quot;</keyword><keyword>&quot;Halts Maul&quot;</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="16" /><Output name="output_14" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="17" /><Output name="output_15" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="18" /><Output name="output_16" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="19" /><Output name="output_17" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="20" /><Output name="output_18" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="21" /><Output name="output_19" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="22" /><Output name="output_20" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="23" /><Output name="output_21" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="24" /></Box><Box name="Switch Case (1)" id="20" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="122" y="529"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Hello")):
			self.output_1(p)
		elif(p == self.typeConversion("shake hand")):
			self.output_2(p)
		elif(p == self.typeConversion("how are")):
			self.output_3(p)
		elif(p == self.typeConversion("who are")):
			self.output_4(p)
		elif(p == self.typeConversion("joke")):
			self.output_5(p)
		elif(p == self.typeConversion("how old")):
			self.output_6(p)
		elif(p == self.typeConversion("Siri")):
			self.output_7(p)
		elif(p == self.typeConversion("selfdestruction")):
			self.output_8(p)
		elif(p == self.typeConversion("from where")):
			self.output_9(p)
		elif(p == self.typeConversion("dance")):
			self.output_10(p)
		elif(p == self.typeConversion("weather")):
			self.output_11(p)
		elif(p == self.typeConversion("game")):
			self.output_12(p)
		elif(p == self.typeConversion("Max")):
			self.output_13(p)
		elif(p == self.typeConversion("other things")):
			self.output_14(p)
		elif(p == self.typeConversion("small")):
			self.output_15(p)
		elif(p == self.typeConversion("stupid robot")):
			self.output_16(p)
		elif(p == self.typeConversion("sut up")):
			self.output_17(p)
		elif(p == self.typeConversion("Google")):
			self.output_18(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>&quot;Hello&quot;</keyword><keyword>&quot;shake hand&quot;</keyword><keyword>&quot;how are&quot;</keyword><keyword>&quot;who are&quot;</keyword><keyword>&quot;joke&quot;</keyword><keyword>&quot;how old&quot;</keyword><keyword>&quot;Siri&quot;</keyword><keyword>&quot;selfdestruction&quot;</keyword><keyword>&quot;from where&quot;</keyword><keyword>&quot;dance&quot;</keyword><keyword>&quot;weather&quot;</keyword><keyword>&quot;game&quot;</keyword><keyword>&quot;Max&quot;</keyword><keyword>&quot;other things&quot;</keyword><keyword>&quot;small&quot;</keyword><keyword>&quot;stupid robot&quot;</keyword><keyword>&quot;sut up&quot;</keyword><keyword>&quot;Google&quot;</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="16" /><Output name="output_14" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="17" /><Output name="output_15" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="18" /><Output name="output_16" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="19" /><Output name="output_17" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="20" /><Output name="output_18" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="21" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="48" indexofinput="2" outputowner="1" indexofoutput="5" /><Link inputowner="48" indexofinput="2" outputowner="1" indexofoutput="6" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="16" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="21" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="22" /><Link inputowner="20" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="48" indexofinput="2" outputowner="20" indexofoutput="5" /><Link inputowner="2" indexofinput="2" outputowner="20" indexofoutput="13" /><Link inputowner="5" indexofinput="2" outputowner="20" indexofoutput="18" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="19" indexofinput="2" outputowner="9" indexofoutput="5" /><Link inputowner="8" indexofinput="3" outputowner="9" indexofoutput="5" /><Link inputowner="8" indexofinput="3" outputowner="0" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="8" /><Link inputowner="2" indexofinput="2" outputowner="19" indexofoutput="4" /><Link inputowner="17" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="20" indexofinput="2" outputowner="19" indexofoutput="4" /><Link inputowner="9" indexofinput="3" outputowner="9" indexofoutput="5" /><Link inputowner="9" indexofinput="2" outputowner="20" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Show Website Touch" id="14" localization="8" tooltip="" x="156" y="156"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="custom/tablet/onButtonClick" type="0" type_size="1" nature="4" stm_value_name="custom/tablet/onButtonClick" inner="1" tooltip="custom/tablet/onButtonClick desc" id="4" /><Input name="BackBumperPressed" type="0" type_size="1" nature="4" stm_value_name="BackBumperPressed" inner="1" tooltip="BackBumperPressed desc" id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" /><Output name="onButtonClick" type="0" type_size="1" nature="2" inner="0" tooltip="" id="7" /><Parameter name="showLocalAppFile" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="8" /><Parameter name="randomMin" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="99998" tooltip="" id="9" /><Parameter name="randomMax" inherits_from_parent="0" content_type="1" value="3" default_value="10" min="1" max="999999" tooltip="" id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="TabletTouchEvents" id="8" localization="8" tooltip="" x="368" y="108"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Tablet Touch" id="10" localization="8" tooltip="Sends an event when the tablet is touched&#x0A;&#x0A;V1.0.1&#x0A;" x="214" y="100"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False
        self.tabletService = None
        self.connectId = None

    def onUnload(self):
        if self.tabletService:
            self.disconnectListener()
            self.isRunning = False

    def disconnectListener(self):
        if self.connectId:
            try:
                self.tabletService.onTouch.disconnect(self.connectId)
                self.connectId = None
            except Exception as e:
                self.logger.error(e)

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def  onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        self.tabletService = self._getTabletService()
        if self.tabletService:
            try:
                if not self.connectId:
                    if self.getParameter("Action") == "On touch move":
                        self.connectId = self.tabletService.onTouchMove.connect(self.touchCallback)
                    elif self.getParameter("Action") == "On touch down":
                        self.connectId = self.tabletService.onTouchDownRatio.connect(self.touchCallback)
                    elif self.getParameter("Action") == "On touch up":
                        self.connectId = self.tabletService.onTouchUp.connect(self.touchCallback)
            except Exception as err:
                self.logger.warning("Error during subscribe: %s " % err)
        else:
            self.logger.info("No ALTabletService, can't play listen for touch.")

    def touchCallback(self, x, y, activity):
        scale = self.tabletService.getOnTouchScaleFactor()
        self.onTouched( [x, y, activity] )
        #self.onTouched( [x/scale, y/scale, activity] )

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onTouched" type="0" type_size="1" nature="2" inner="0" tooltip="Send [x,y] position for one touch" id="4" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On touch down" default_value="On touch move" custom_choice="0" tooltip="Type of touch you want on the tablet." id="5"><Choice value="On touch move" /><Choice value="On touch down" /><Choice value="On touch up" /></Parameter></Box><Box name="Raise Event" id="1" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="404" y="102"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="custom/tablet/onTouchDown" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Tablet Touch (1)" id="4" localization="8" tooltip="Sends an event when the tablet is touched&#x0A;&#x0A;V1.0.1&#x0A;" x="223" y="248"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False
        self.tabletService = None
        self.connectId = None

    def onUnload(self):
        if self.tabletService:
            self.disconnectListener()
            self.isRunning = False

    def disconnectListener(self):
        if self.connectId:
            try:
                self.tabletService.onTouch.disconnect(self.connectId)
                self.connectId = None
            except Exception as e:
                self.logger.error(e)

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def  onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        self.tabletService = self._getTabletService()
        if self.tabletService:
            try:
                if not self.connectId:
                    if self.getParameter("Action") == "On touch move":
                        self.connectId = self.tabletService.onTouchMove.connect(self.touchCallback)
                    elif self.getParameter("Action") == "On touch down":
                        self.connectId = self.tabletService.onTouchDown.connect(self.touchCallback)
                    elif self.getParameter("Action") == "On touch up":
                        self.connectId = self.tabletService.onTouchUp.connect(self.touchCallback)
            except Exception as err:
                self.logger.warning("Error during subscribe: %s " % err)
        else:
            self.logger.info("No ALTabletService, can't play listen for touch.")

    def touchCallback(self, x, y):
        self.onTouched([x, y])

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onTouched" type="0" type_size="1" nature="2" inner="0" tooltip="Send [x,y] position for one touch" id="4" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On touch up" default_value="On touch move" custom_choice="0" tooltip="Type of touch you want on the tablet." id="5"><Choice value="On touch move" /><Choice value="On touch down" /><Choice value="On touch up" /></Parameter></Box><Box name="Raise Event (1)" id="6" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="413" y="250"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="custom/tablet/onTouchUp" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Show Website" id="6" localization="8" tooltip="" x="538" y="24"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import qi
from time import sleep
from random import randint

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tablet  = self.session().service("ALTabletService")
        self.tts = self.session().service("ALTextToSpeech")

    def onUnload(self):
        self.onStopped()

    def onInput_onStart(self, p):
        self.tablet  = self.session().service("ALTabletService")
        n = 0
        file = p.replace("%", str(n))

        url = file
        if self.getParameter("showLocalAppFile"):
            url = self.behaviorAbsolutePath().split("apps/")
            if len(url) > 1:
                url = str( url[1].split("/")[0] ) + "/"

            lang = self.tts.getLanguage()
            self.logger.info(lang)
            if "German" in lang:
                lang = "de/"
            else:
                lang = "en/"
            url = "http://198.18.0.1/apps/" + url + lang + file

        self.logger.debug("loading " + url)
        try:
            self.tablet.showWebview( url )
        except:
            self.logger.error("cannot show website")

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
         #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="showLocalAppFile" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="" id="5" /><Parameter name="randomMin" inherits_from_parent="1" content_type="1" value="0" default_value="0" min="0" max="99999" tooltip="" id="6" /><Parameter name="randomMax" inherits_from_parent="1" content_type="1" value="10" default_value="10" min="1" max="99998" tooltip="" id="7" /></Box><Box name="Text Edit" id="1" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="233" y="6"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("index.html")]]></content></script><pluginContent><text><![CDATA[index.html]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="OnDefault" id="9" localization="8" tooltip="" x="527" y="185"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.p = None

    def onUnload(self):
        self.p = None

    def onInput_onStart(self, p):
        self.p = p

    def onInput_onDefault(self):
        self.onStopped(self.p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(self.p) #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /></Box><Box name="Select Subsite" id="2" localization="8" tooltip="" x="308" y="252"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onSiteFound" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" /><Output name="onNone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="84" y="82"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("home")):
			self.output_1(p)
		elif(p == self.typeConversion("music")):
			self.output_2(p)
		elif(p == self.typeConversion("fun")):
			self.output_3(p)
		elif(p == self.typeConversion("fun2")):
			self.output_4(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>&quot;home&quot;</keyword><keyword>&quot;music&quot;</keyword><keyword>&quot;fun&quot;</keyword><keyword>&quot;fun2&quot;</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" /></Box><Box name="Text Edit" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="349" y="107"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("index.html")]]></content></script><pluginContent><text><![CDATA[index.html]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (1)" id="3" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="346" y="199"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("music.html")]]></content></script><pluginContent><text><![CDATA[music.html]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (2)" id="4" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="344" y="289"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("fun.html")]]></content></script><pluginContent><text><![CDATA[fun.html]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (3)" id="5" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="362" y="385"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("fun2.html")]]></content></script><pluginContent><text><![CDATA[fun2.html]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="3" /><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="3" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" /><Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="7" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Wait" id="3" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="106" y="204"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Link inputowner="0" indexofinput="6" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="0" indexofinput="7" outputowner="9" indexofoutput="5" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="9" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="8" indexofinput="3" outputowner="0" indexofoutput="5" /><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Load Profile" id="22" localization="8" tooltip="" x="123" y="307"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="118.921"><Box name="Max Speech Settings" id="17" localization="8" tooltip="Sets the speech settings for system wide usage." x="214" y="24"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.mem.declareEvent( 'sys/speech/shape' )
        self.mem.declareEvent( 'sys/speech/speed' )

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.mem.insertData( 'sys/speech/shape', self.getParameter("Voice shaping (%)") )
        self.mem.insertData( 'sys/speech/speed', self.getParameter("Speed (%)") )

        self.logger.debug( "Set voice parameter to " + str(self.getParameter("Voice shaping (%)")) + "% shape and " + str(self.getParameter("Speed (%)")) + "% speed" )

        self.onStopped() #activate the output of the box

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="75" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="90" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" /></Box><Box name="Emma Speech Settings" id="1" localization="8" tooltip="Sets the speech settings for system wide usage." x="219" y="152"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.mem.declareEvent( 'sys/speech/shape' )
        self.mem.declareEvent( 'sys/speech/speed' )

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.mem.insertData( 'sys/speech/shape', self.getParameter("Voice shaping (%)") )
        self.mem.insertData( 'sys/speech/speed', self.getParameter("Speed (%)") )

        self.logger.debug( "Set voice parameter to " + str(self.getParameter("Voice shaping (%)")) + "% shape and " + str(self.getParameter("Speed (%)")) + "% speed" )

        self.onStopped() #activate the output of the box

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="95" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="90" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" /></Box><Box name="Autonomous Abilities" id="2" localization="8" tooltip="Autonomous Abilities exists to keep the robot alive at all times. But this box allows you to disable all or parts of the Autonomous Abilities (Autonomous Blinking, Background Movement, Basic Awareness, Listening Movement, Speaking Movement)." x="92" y="231"><bitmap>media/images/box/auto-abilities.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.autonomouslife = ALProxy("ALAutonomousLife")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.enableAnAbility("AutonomousBlinking")
        self.enableAnAbility("BackgroundMovement")
        self.enableAnAbility("BasicAwareness")
        self.enableAnAbility("ListeningMovement")
        self.enableAnAbility("SpeakingMovement")
        self.onDone() # activate output of the box

    def enableAnAbility(self, name):
        self.autonomouslife.setAutonomousAbilityEnabled(name, self.getParameter(name))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="AutonomousBlinking" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables the robot to make its eye leds blink when it sees someone and when it is interacting." id="4" /><Parameter name="BackgroundMovement" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Defines which slight movements the robot does autonomously when its limbs are not moving." id="5" /><Parameter name="BasicAwareness" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Allow to make the robot establish and keep eye contact with people." id="6" /><Parameter name="ListeningMovement" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables some slight movements showing that the robot is listening." id="7" /><Parameter name="SpeakingMovement" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables to start autonomously movements during the speech of the robot." id="8" /></Box><Box name="Set Language" id="3" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" x="90" y="343"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            self.tts = None

        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            self.asr = None

        try:
            self.dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            self.dialog = None

    def onInput_onSet(self):
        lang = self.getParameter("Language")
        try:
            if self.asr:
                self.asr.setLanguage( self.getParameter("Language") )
            if self.tts:
                self.tts.setLanguage( self.getParameter("Language") )
            if self.dialog:
                self.dialog.setLanguage( self.getParameter("Language") )
            if self.tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
            self.onReady()
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)
            self.onError(error)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" /><Parameter name="Language" inherits_from_parent="0" content_type="3" value="German" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks and understands." id="5"><Choice value="Arabic" /><Choice value="Brazilian" /><Choice value="Chinese" /><Choice value="Czech" /><Choice value="Danish" /><Choice value="Dutch" /><Choice value="English" /><Choice value="Finnish" /><Choice value="French" /><Choice value="German" /><Choice value="Greek" /><Choice value="Italian" /><Choice value="Japanese" /><Choice value="Korean" /><Choice value="MandarinTaiwan" /><Choice value="Norwegian" /><Choice value="Polish" /><Choice value="Portuguese" /><Choice value="Russian" /><Choice value="Spanish" /><Choice value="Swedish" /><Choice value="Turkish" /></Parameter><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Breath/Idle Set/Reset" id="7" localization="8" tooltip="Stiffen or loosen all motors." x="104" y="438"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.idleEnabled = False
        self.breathEnabled = False

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.idleEnabled = self.motion.getIdlePostureEnabled( self.getParameter("Motors") )
        self.breathEnabled = self.motion.getBreathEnabled( self.getParameter("Motors") )

    def onUnload(self):
        self.onFinished()

    def onInput_onSet(self):
        self.idleEnabled = self.motion.getIdlePostureEnabled( self.getParameter("Motors") )
        self.breathEnabled = self.motion.getBreathEnabled( self.getParameter("Motors") )

        enabled = 'Enabled' in self.getParameter("Action")
        self.idle = self.motion.setIdlePostureEnabled( str(self.getParameter("Motors")), enabled )
        self.breath = self.motion.setBreathEnabled( str(self.getParameter("Motors")), enabled )

        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.motion.setIdlePostureEnabled( str(self.getParameter("Motors")), self.idleEnabled )
        self.motion.setBreathEnabled( str(self.getParameter("Motors")), self.breathEnabled )

        self.onFinished()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="Enabled" default_value="Disabled" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Disabled" /><Choice value="Enabled" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Body" default_value="Body" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="RArm" /><Choice value="Arms" /><Choice value="Body" /><Choice value="Legs" /></Parameter></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Start App" id="17" localization="8" tooltip="" x="307" y="213"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="appStarted" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="70.7107"><Box name="Text Edit" id="5" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="478" y="81"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("takepicture-55b7b8/behavior_1")]]></content></script><pluginContent><text><![CDATA[takepicture-55b7b8/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (1)" id="6" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="486" y="185"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("instrument-6049e6/behavior_1")]]></content></script><pluginContent><text><![CDATA[instrument-6049e6/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (2)" id="7" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="473" y="279"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("animals-bdaec7/behavior_1")]]></content></script><pluginContent><text><![CDATA[animals-bdaec7/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (3)" id="8" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="474" y="380"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("cleantheroom-2cf3bf/behavior_1")]]></content></script><pluginContent><text><![CDATA[cleantheroom-2cf3bf/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (5)" id="10" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="477" y="492"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("pepper-quiz-cff7c2/behavior_1")]]></content></script><pluginContent><text><![CDATA[pepper-quiz-cff7c2/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (6)" id="11" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="493" y="597"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("fistbump-6e3ce6/behavior_1")]]></content></script><pluginContent><text><![CDATA[fistbump-6e3ce6/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (7)" id="12" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="511" y="683"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("magic-1b727d/behavior_1")]]></content></script><pluginContent><text><![CDATA[magic-1b727d/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (8)" id="1" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="521" y="776"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("genderageexpression-7842c6/behavior_1")]]></content></script><pluginContent><text><![CDATA[genderageexpression-7842c6/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (9)" id="4" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="521" y="892"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("gangnamstyle-835df6/behavior_1")]]></content></script><pluginContent><text><![CDATA[gangnamstyle-835df6/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Switch Case" id="3" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="189" y="100"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("follow")):
			self.output_1(p)
		elif(p == self.typeConversion("picture")):
			self.output_2(p)
		elif(p == self.typeConversion("instrument")):
			self.output_3(p)
		elif(p == self.typeConversion("animal")):
			self.output_4(p)
		elif(p == self.typeConversion("clean")):
			self.output_5(p)
		elif(p == self.typeConversion("website")):
			self.output_6(p)
		elif(p == self.typeConversion("quiz")):
			self.output_7(p)
		elif(p == self.typeConversion("fist")):
			self.output_8(p)
		elif(p == self.typeConversion("magic")):
			self.output_9(p)
		elif(p == self.typeConversion("age")):
			self.output_10(p)
		elif(p == self.typeConversion("gangnam")):
			self.output_11(p)
		elif(p == self.typeConversion("macarena")):
			self.output_12(p)
		elif(p == self.typeConversion("memory")):
			self.output_13(p)
		elif(p == self.typeConversion("tai chi")):
			self.output_14(p)
		elif(p == self.typeConversion("highfive")):
			self.output_15(p)
		elif(p == self.typeConversion("taichi")):
			self.output_16(p)
		elif(p == self.typeConversion("learnface")):
			self.output_17(p)
		elif(p == self.typeConversion("contact")):
			self.output_18(p)
		elif(p == self.typeConversion("rock")):
			self.output_19(p)
		elif(p == self.typeConversion("maintain")):
			self.output_20(p)
		elif(p == self.typeConversion("settings")):
			self.output_21(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>&quot;follow&quot;</keyword><keyword>&quot;picture&quot;</keyword><keyword>&quot;instrument&quot;</keyword><keyword>&quot;animal&quot;</keyword><keyword>&quot;clean&quot;</keyword><keyword>&quot;website&quot;</keyword><keyword>&quot;quiz&quot;</keyword><keyword>&quot;fist&quot;</keyword><keyword>&quot;magic&quot;</keyword><keyword>&quot;age&quot;</keyword><keyword>&quot;gangnam&quot;</keyword><keyword>&quot;macarena&quot;</keyword><keyword>&quot;memory&quot;</keyword><keyword>&quot;tai chi&quot;</keyword><keyword>&quot;highfive&quot;</keyword><keyword>&quot;taichi&quot;</keyword><keyword>&quot;learnface&quot;</keyword><keyword>&quot;contact&quot;</keyword><keyword>&quot;rock&quot;</keyword><keyword>&quot;maintain&quot;</keyword><keyword>&quot;settings&quot;</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="16" /><Output name="output_14" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="17" /><Output name="output_15" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="18" /><Output name="output_16" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="19" /><Output name="output_17" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="20" /><Output name="output_18" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="21" /><Output name="output_19" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="22" /><Output name="output_20" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="23" /><Output name="output_21" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="24" /></Box><Box name="OnDefault" id="9" localization="8" tooltip="" x="856" y="25"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.p = None

    def onUnload(self):
        self.p = None

    def onInput_onStart(self, p):
        self.p = p

    def onInput_onDefault(self):
        self.onStopped(self.p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(self.p) #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /></Box><Box name="Text Edit (4)" id="13" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="505" y="987"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("macarena-83b7ba/Macarena")]]></content></script><pluginContent><text><![CDATA[macarena-83b7ba/Macarena]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (10)" id="14" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="508" y="1085"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("memorymesse-628f3e/behavior_1")]]></content></script><pluginContent><text><![CDATA[memorymesse-628f3e/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (11)" id="15" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="510" y="1291"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("taichi-5ba226/behavior_1")]]></content></script><pluginContent><text><![CDATA[taichi-5ba226/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (12)" id="17" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="514" y="1197"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("highfive/behavior_1")]]></content></script><pluginContent><text><![CDATA[highfive/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Show Website" id="16" localization="8" tooltip="" x="903" y="513"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import qi
from time import sleep

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tablet  = self.session().service("ALTabletService")
        self.tts = self.session().service("ALTextToSpeech")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        file = self.getParameter("file")
        url = ""
        if self.getParameter("showLocalAppFile"):
            url = self.behaviorAbsolutePath().split("apps/")
            if len(url) > 1:
                url = str( url[1].split("/")[0] ) + "/"

            lang = self.tts.getLanguage()
            if "German" in lang:
                lang = "de/"
            else:
                lang = "en/"
            url = "http://198.18.0.1/apps/" + url + lang + file

        self.logger.debug("loading " + url)
        self.tablet.showWebview( url )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="event" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Parameter name="file" inherits_from_parent="0" content_type="3" value="wait.html" default_value="index.html" custom_choice="0" tooltip="" id="6" /><Parameter name="showLocalAppFile" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="7" /></Box><Box name="Start Behavior" id="18" localization="0" tooltip="Starts the behavior of the name given as input." x="880" y="311"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_startBehavior(self, p):
        from time import sleep
        bm = ALProxy("ALBehaviorManager")
        sleep(1.0)
        self.logger.info("starting :" + p)
        bm.startBehavior(p)
        self.onBehaviorStarted(p) #~ activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="startBehavior" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onBehaviorStarted" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. Recalls the behavior name." id="3" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Triggered if an error occurs at behavior start." id="4" /></Box><Box name="Text Edit (13)" id="2" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="534" y="1385"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("learnface-612084/behavior_1")]]></content></script><pluginContent><text><![CDATA[learnface-612084/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Say Global Bodytalk" id="19" localization="8" tooltip="" x="214" y="598"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Contact" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Text Edit (14)" id="20" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="535" y="1484"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("rocknroll/behavior_1")]]></content></script><pluginContent><text><![CDATA[rocknroll/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Insert Data" id="21" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key." x="1282" y="312"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.insertData(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="doku_app/last_game" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Text Edit (15)" id="22" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="1133" y="603"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("bewohner")]]></content></script><pluginContent><text><![CDATA[bewohner]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Insert Data (1)" id="23" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key." x="1579" y="735"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.insertData(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="doku_app/mode" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Text Edit (16)" id="24" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="1140" y="761"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("bewohner")]]></content></script><pluginContent><text><![CDATA[bewohner]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Insert Data (2)" id="26" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key." x="1597" y="1000"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.insertData(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="doku_app/mode" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Text Edit (18)" id="27" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="1158" y="1026"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("betreuer")]]></content></script><pluginContent><text><![CDATA[betreuer]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Box name="Text Edit (17)" id="28" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="540" y="1582"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("doku_app/behavior_1")]]></content></script><pluginContent><text><![CDATA[doku_app/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="5" /><Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="6" /><Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="7" /><Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="8" /><Link inputowner="10" indexofinput="2" outputowner="3" indexofoutput="10" /><Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="11" /><Link inputowner="12" indexofinput="2" outputowner="3" indexofoutput="12" /><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="9" indexofinput="3" outputowner="3" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="5" /><Link inputowner="14" indexofinput="2" outputowner="3" indexofoutput="16" /><Link inputowner="13" indexofinput="2" outputowner="3" indexofoutput="15" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="13" /><Link inputowner="15" indexofinput="2" outputowner="3" indexofoutput="17" /><Link inputowner="15" indexofinput="2" outputowner="3" indexofoutput="19" /><Link inputowner="17" indexofinput="2" outputowner="3" indexofoutput="18" /><Link inputowner="18" indexofinput="2" outputowner="7" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="18" indexofoutput="4" /><Link inputowner="0" indexofinput="5" outputowner="18" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="6" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="5" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="8" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="10" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="11" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="12" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="4" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="13" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="14" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="17" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="15" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="5" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="6" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="7" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="8" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="10" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="11" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="12" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="4" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="13" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="14" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="17" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="15" indexofoutput="3" /><Link inputowner="18" indexofinput="2" outputowner="2" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="2" indexofoutput="3" /><Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="20" /><Link inputowner="19" indexofinput="2" outputowner="3" indexofoutput="21" /><Link inputowner="20" indexofinput="2" outputowner="3" indexofoutput="22" /><Link inputowner="18" indexofinput="2" outputowner="20" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="20" indexofoutput="3" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="5" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="6" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="7" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="8" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="9" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="10" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="11" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="12" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="13" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="14" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="15" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="16" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="17" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="18" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="19" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="20" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="21" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="22" /><Link inputowner="24" indexofinput="2" outputowner="3" indexofoutput="23" /><Link inputowner="23" indexofinput="2" outputowner="24" indexofoutput="3" /><Link inputowner="26" indexofinput="2" outputowner="27" indexofoutput="3" /><Link inputowner="27" indexofinput="2" outputowner="3" indexofoutput="24" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="5" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="6" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="7" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="8" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="9" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="10" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="11" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="12" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="13" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="14" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="15" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="16" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="17" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="18" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="19" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="20" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="21" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="22" /><Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="23" /><Link inputowner="23" indexofinput="2" outputowner="22" indexofoutput="3" /><Link inputowner="28" indexofinput="2" outputowner="3" indexofoutput="24" /><Link inputowner="18" indexofinput="2" outputowner="28" indexofoutput="3" /><Link inputowner="16" indexofinput="2" outputowner="28" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Do Different Stuff" id="2" localization="8" tooltip="" x="502" y="122"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="70.7107"><Box name="OnDefault" id="9" localization="8" tooltip="" x="436" y="21"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.p = None

    def onUnload(self):
        self.p = None

    def onInput_onStart(self, p):
        self.p = p

    def onInput_onDefault(self):
        self.onStopped(self.p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(self.p) #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /></Box><Box name="Switch Case" id="1" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="119" y="104"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("settings")):
			self.output_1(p)
		elif(p == self.typeConversion("volup")):
			self.output_2(p)
		elif(p == self.typeConversion("voldown")):
			self.output_3(p)
		elif(p == self.typeConversion("uturn")):
			self.output_4(p)
		elif(p == self.typeConversion("en")):
			self.output_5(p)
		elif(p == self.typeConversion("de")):
			self.output_6(p)
		elif(p == self.typeConversion("rest")):
			self.output_7(p)
		elif(p == self.typeConversion("wakeup")):
			self.output_8(p)
		elif(p == self.typeConversion("contact")):
			self.output_9(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>&quot;settings&quot;</keyword><keyword>&quot;volup&quot;</keyword><keyword>&quot;voldown&quot;</keyword><keyword>&quot;uturn&quot;</keyword><keyword>&quot;en&quot;</keyword><keyword>&quot;de&quot;</keyword><keyword>&quot;rest&quot;</keyword><keyword>&quot;wakeup&quot;</keyword><keyword>&quot;contact&quot;</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="12" /></Box><Box name="Set Speaker Vol." id="2" localization="8" tooltip="Set the sound volume between 0 (mute) and 100 (max).&#x0A;&#x0A;V1.1.0&#x0A;" x="445" y="243"><bitmap>media/images/box/interaction/processing_sound.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.audiodevice = ALProxy("ALAudioDevice")

    def onInput_onUp(self):
        try:
            value = self.audiodevice.getOutputVolume()
            value += self.getParameter("Steps")
            if value > 100:
                value = 100
            self.audiodevice.setOutputVolume(value)
        except Exception as e:
            self.logger.error(e)

        self.onReady() # activate output of the box

    def onInput_onDown(self):
        try:
            value = self.audiodevice.getOutputVolume()
            value -= self.getParameter("Steps")
            if value < 0:
                value = 0
            self.audiodevice.setOutputVolume(value)
        except Exception as e:
            self.logger.error(e)

        self.onReady() # activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onUp" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" /><Input name="onDown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" /><Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the data has been set." id="4" /><Parameter name="Steps" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="1" max="100" tooltip="" id="5" /></Box><Box name="Play Sound" id="4" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="622" y="239"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../sounds/begin_reco.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="UTurn" id="6" localization="8" tooltip="" x="450" y="372"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Raise Event" id="5" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="64" y="62"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/stopAwareness" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Raise Event (1)" id="1" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="523" y="74"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/startAwareness" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Move To" id="3" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="294" y="69"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" /><Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" /><Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" /><Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" /><Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="90" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" /><Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" /><Resource name="Legs" type="Lock" timeout="0" /></Box><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" /><Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Set EN" id="8" localization="8" tooltip="Enter description here" x="471" y="491"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="Raise Event_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Set EN" id="5" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" x="447" y="178"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            self.tts = None

        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            self.asr = None

        try:
            self.dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            self.dialog = None

    def onInput_onSet(self):
        lang = self.getParameter("Language")
        try:
            if self.asr:
                self.asr.setLanguage( self.getParameter("Language") )
            if self.tts:
                self.tts.setLanguage( self.getParameter("Language") )
            if self.dialog:
                self.dialog.setLanguage( self.getParameter("Language") )
            if self.tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
            self.onReady()
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)
            self.onError(error)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" /><Parameter name="Language" inherits_from_parent="0" content_type="3" value="English" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks and understands." id="5"><Choice value="Arabic" /><Choice value="Brazilian" /><Choice value="Chinese" /><Choice value="Czech" /><Choice value="Danish" /><Choice value="Dutch" /><Choice value="English" /><Choice value="Finnish" /><Choice value="French" /><Choice value="German" /><Choice value="Greek" /><Choice value="Italian" /><Choice value="Japanese" /><Choice value="Korean" /><Choice value="MandarinTaiwan" /><Choice value="Norwegian" /><Choice value="Polish" /><Choice value="Portuguese" /><Choice value="Russian" /><Choice value="Spanish" /><Choice value="Swedish" /><Choice value="Turkish" /></Parameter><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Raise Event" id="7" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="307" y="182"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/stopAutonomousLife" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Raise Event (1)" id="3" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="624" y="184"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/startAutonomousLife" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Link inputowner="5" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="3" /><Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="3" outputowner="3" indexofoutput="4" /><Link inputowner="0" indexofinput="3" outputowner="3" indexofoutput="5" /><Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Set DE" id="3" localization="8" tooltip="Enter description here" x="475" y="606"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="Raise Event_onStart" type="0" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Set DE" id="5" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" x="453" y="164"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            self.tts = None

        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            self.asr = None

        try:
            self.dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            self.dialog = None

    def onInput_onSet(self):
        lang = self.getParameter("Language")
        try:
            if self.asr:
                self.asr.setLanguage( self.getParameter("Language") )
            if self.tts:
                self.tts.setLanguage( self.getParameter("Language") )
            if self.dialog:
                self.dialog.setLanguage( self.getParameter("Language") )
            if self.tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
            self.onReady()
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)
            self.onError(error)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" /><Parameter name="Language" inherits_from_parent="0" content_type="3" value="German" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks and understands." id="5"><Choice value="Arabic" /><Choice value="Brazilian" /><Choice value="Chinese" /><Choice value="Czech" /><Choice value="Danish" /><Choice value="Dutch" /><Choice value="English" /><Choice value="Finnish" /><Choice value="French" /><Choice value="German" /><Choice value="Greek" /><Choice value="Italian" /><Choice value="Japanese" /><Choice value="Korean" /><Choice value="MandarinTaiwan" /><Choice value="Norwegian" /><Choice value="Polish" /><Choice value="Portuguese" /><Choice value="Russian" /><Choice value="Spanish" /><Choice value="Swedish" /><Choice value="Turkish" /></Parameter><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Raise Event" id="7" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="313" y="168"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/stopAutonomousLife" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Raise Event (1)" id="3" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="630" y="170"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/startAutonomousLife" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Link inputowner="5" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="3" /><Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="3" outputowner="7" indexofoutput="5" /><Link inputowner="0" indexofinput="3" outputowner="3" indexofoutput="4" /><Link inputowner="0" indexofinput="3" outputowner="3" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Raise Event" id="5" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="652" y="549"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.raiseEvent(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="webapi/restartWebsite" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Rest" id="7" localization="0" tooltip="Call a Rest process.&#x0A;Apply crouch posture if the robot is Stand then unStiff all joints" x="476" y="696"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.rest()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Box name="WakeUp" id="10" localization="0" tooltip="Call a Wake Up process.&#x0A;Stiff all joints and apply stand Init posture if the robot is Stand" x="490" y="801"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.wakeUp()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Box name="Say Global Bodytalk" id="11" localization="8" tooltip="" x="182" y="564"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Contact" default_value="" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Arms down" id="3" localization="8" tooltip="Enter tooltip here" x="880" y="330"><bitmap>media/images/box/movement/move_arm.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="10"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-66.6195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-28.743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.5132" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="52.9963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-26.5457" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="60.4719" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.5884" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="53.7042" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-3.60597" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="12.3903" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="BodyTalk" id="1" localization="8" tooltip="Enter tooltip here" x="880" y="215"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="RandomInt - and sleep" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="232" y="137"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[import random
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #time.sleep( random.random() );
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" /><Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" /><Parameter name="max" inherits_from_parent="0" content_type="1" value="12" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" /><Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" /></Box><Box name="Dispatcher" id="2" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="384" y="75"><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		elif(p == self.typeConversion(4)):
			self.output_5(p)
		elif(p == self.typeConversion(5)):
			self.output_6(p)
		elif(p == self.typeConversion(6)):
			self.output_7(p)
		elif(p == self.typeConversion(7)):
			self.output_8(p)
		elif(p == self.typeConversion(8)):
			self.output_9(p)
		elif(p == self.typeConversion(9)):
			self.output_10(p)
		elif(p == self.typeConversion(10)):
			self.output_11(p)
		elif(p == self.typeConversion(11)):
			self.output_12(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>0</keyword><keyword>1</keyword><keyword>2</keyword><keyword>3</keyword><keyword>4</keyword><keyword>5</keyword><keyword>6</keyword><keyword>7</keyword><keyword>8</keyword><keyword>9</keyword><keyword>10</keyword><keyword>11</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" /><Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" /><Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" /><Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="9" /><Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="10" /><Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="11" /><Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="12" /><Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="13" /><Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="14" /><Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="15" /><Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="16" /></Box><Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="767" y="74"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="50"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="16" value="51.7658" /><Key frame="28" value="37.9668" /><Key frame="50" value="42.6251" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="16" value="18.6306" /><Key frame="28" value="2.107" /><Key frame="50" value="2.45856" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="16" value="-93.5192" /><Key frame="28" value="-47.2882" /><Key frame="50" value="-47.4639" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="16" value="-63.9828" /><Key frame="28" value="-80.2427" /><Key frame="50" value="-84.7252" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="16" value="2.98591" /><Key frame="28" value="-8.5279" /><Key frame="50" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="16" value="0.181844" /><Key frame="28" value="0.878" /><Key frame="50" value="0.8816" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="55.8137" /><Key frame="27" value="46.4971" /><Key frame="49" value="49.6612" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-21.0085" /><Key frame="27" value="-5.18802" /><Key frame="49" value="-5.45169" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="98.2605" /><Key frame="27" value="57.7425" /><Key frame="49" value="56.0725" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="59.6809" /><Key frame="27" value="85.6968" /><Key frame="49" value="87.8062" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="-14.8561" /><Key frame="27" value="7.81996" /><Key frame="49" value="6.58948" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.161844" /><Key frame="27" value="0.8192" /><Key frame="49" value="0.8204" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk2" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="170"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="21" value="28.4745" /><Key frame="40" value="31.8144" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="21" value="5.71056" /><Key frame="40" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="21" value="-97.6501" /><Key frame="40" value="-105.033" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="21" value="-78.2212" /><Key frame="40" value="-79.1001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="21" value="9" /><Key frame="40" value="-4.92434" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="21" value="0.654545" /><Key frame="40" value="0.6556" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="46.6729" /><Key frame="38" value="55.0226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-10.6373" /><Key frame="38" value="-9.49471" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="101.337" /><Key frame="38" value="107.929" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="67.679" /><Key frame="38" value="67.1517" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="38" value="12.9177" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="38" value="0.82" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk3" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="769" y="267"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="47" /><Key frame="28" value="49" /><Key frame="49" value="52.1174" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.57779" /><Key frame="28" value="2.72224" /><Key frame="49" value="3.68905" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-36.038" /><Key frame="28" value="-46.9366" /><Key frame="49" value="-41.751" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-65.4769" /><Key frame="28" value="-53.1" /><Key frame="49" value="-53.4358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="28" value="-14" /><Key frame="49" value="-27.6883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="28" value="0.345455" /><Key frame="49" value="0.3476" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="13" value="35" /><Key frame="26" value="32" /><Key frame="47" value="36.5654" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="13" value="-18.2839" /><Key frame="26" value="-3.43018" /><Key frame="47" value="-3.69386" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="13" value="24.6952" /><Key frame="26" value="85.4284" /><Key frame="47" value="90.4382" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="13" value="89.5017" /><Key frame="26" value="83.2359" /><Key frame="47" value="83.8511" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="26" value="51" /><Key frame="47" value="55.2815" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="26" value="0.345455" /><Key frame="47" value="0.492" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="771" y="365"><bitmap>media/images/positions/StandUp_1.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="48"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="23" value="47" /><Key frame="48" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="23" value="5.2711" /><Key frame="48" value="7.64418" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="23" value="-27.1609" /><Key frame="48" value="-41.2236" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="23" value="-53.0842" /><Key frame="48" value="-48.0744" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="23" value="-14.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="23" value="0.334571" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="21" value="51.9" /><Key frame="46" value="53.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="21" value="-16.526" /><Key frame="46" value="-19.1628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="21" value="28.1229" /><Key frame="46" value="37.6153" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="21" value="83.6753" /><Key frame="46" value="76.4682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="21" value="52.2932" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="21" value="0.336025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="464"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="6.15002" /><Key frame="32" value="28" /><Key frame="55" value="30.496" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="7.73207" /><Key frame="32" value="9" /><Key frame="55" value="5.97423" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="7.90785" /><Key frame="32" value="-89.8278" /><Key frame="55" value="-96.2438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-75.0571" /><Key frame="32" value="-67.7621" /><Key frame="55" value="-66.7953" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="15" value="-25" /><Key frame="32" value="-24.7" /><Key frame="55" value="-32.4344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.33" /><Key frame="32" value="0.59" /><Key frame="55" value="0.66" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="50.4523" /><Key frame="28" value="52.4738" /><Key frame="51" value="54.4953" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-9.49471" /><Key frame="28" value="-9.14314" /><Key frame="51" value="-9.75839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="62.0492" /><Key frame="28" value="34.6269" /><Key frame="51" value="34.4512" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="51.0675" /><Key frame="28" value="67.5033" /><Key frame="51" value="65.306" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="14" value="62" /><Key frame="28" value="52.6447" /><Key frame="51" value="65.389" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="14" value="0.254545" /><Key frame="28" value="0.33748" /><Key frame="51" value="0.3368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="773" y="563"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="55"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="52.2053" /><Key frame="36" value="46.1408" /><Key frame="55" value="52.3811" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="16.2576" /><Key frame="36" value="6.15002" /><Key frame="55" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-54.4953" /><Key frame="36" value="-33.6649" /><Key frame="55" value="-29.0067" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-88.6803" /><Key frame="36" value="-89.1198" /><Key frame="55" value="-88.5" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="36" value="-45" /><Key frame="55" value="-44.2998" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="36" value="0.41" /><Key frame="55" value="0.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="28.2156" /><Key frame="33" value="40.1689" /><Key frame="53" value="42.2783" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-1.0571" /><Key frame="33" value="-0.881321" /><Key frame="53" value="-2.63916" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="53.1721" /><Key frame="33" value="78.9244" /><Key frame="53" value="78.2212" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="88.9488" /><Key frame="33" value="88.773" /><Key frame="53" value="83.4995" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="33" value="-17" /><Key frame="53" value="-19.6023" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="33" value="0.55" /><Key frame="53" value="0.61" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk6" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="760"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="58"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="23" /><Key frame="34" value="38" /><Key frame="58" value="40.6915" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="1.14019" /><Key frame="34" value="6.94104" /><Key frame="58" value="5.44688" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-26.3699" /><Key frame="34" value="-108.988" /><Key frame="58" value="-116.635" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-52.7326" /><Key frame="34" value="-60.4671" /><Key frame="58" value="-57.8303" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-30" /><Key frame="58" value="-32.2587" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.727273" /><Key frame="58" value="0.7264" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="14" value="35" /><Key frame="31" value="28" /><Key frame="56" value="31.6434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="14" value="-1.40867" /><Key frame="31" value="-0.498473" /><Key frame="56" value="-2.02391" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="14" value="118.564" /><Key frame="31" value="65.8285" /><Key frame="56" value="54.5784" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="14" value="44.0362" /><Key frame="31" value="75.3256" /><Key frame="56" value="74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="25" /><Key frame="56" value="26.8925" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.509091" /><Key frame="56" value="0.5108" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk5" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="774" y="661"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="52"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="17" value="45.965" /><Key frame="34" value="44.4708" /><Key frame="52" value="52.0295" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="17" value="4.12851" /><Key frame="34" value="5.09532" /><Key frame="52" value="5.35899" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="17" value="-51.6827" /><Key frame="34" value="-66.8001" /><Key frame="52" value="-73.0404" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="17" value="-75.2329" /><Key frame="34" value="-69.4321" /><Key frame="52" value="-65.2133" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="34" value="-37" /><Key frame="52" value="-45.7061" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="34" value="0.507273" /><Key frame="52" value="0.5288" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="16" value="44.9151" /><Key frame="31" value="44.3877" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="16" value="-4.57277" /><Key frame="31" value="-3.69386" /><Key frame="50" value="-2.99072" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="16" value="37.8789" /><Key frame="31" value="72.9477" /><Key frame="50" value="78.3091" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="16" value="50.1886" /><Key frame="31" value="54.8468" /><Key frame="50" value="49.7491" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="31" value="46.3" /><Key frame="50" value="48.7775" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="31" value="0.592727" /><Key frame="50" value="0.5948" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="776" y="860"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="46" value="42" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="0.498473" /><Key frame="46" value="5.88634" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-25.9305" /><Key frame="46" value="-43.2451" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-50.8869" /><Key frame="46" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="46" value="-11" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="46" value="0.163636" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="45.3" /><Key frame="43" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-1.58446" /><Key frame="43" value="-3.43018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="46.6681" /><Key frame="43" value="50.6232" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="38.8505" /><Key frame="43" value="40.4326" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="43" value="-5.4" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="43" value="0.2" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="777" y="959"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="19" value="41" /><Key frame="40" value="32.8691" /><Key frame="60" value="37" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="19" value="1.22808" /><Key frame="40" value="3.42537" /><Key frame="60" value="4.12851" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="19" value="-106.615" /><Key frame="40" value="-36.6533" /><Key frame="60" value="-38.8505" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="19" value="-43.0645" /><Key frame="40" value="-58.8851" /><Key frame="60" value="-64.0707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-34.1044" /><Key frame="60" value="-31.8192" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.7448" /><Key frame="60" value="0.7448" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="18" value="37" /><Key frame="39" value="38.6748" /><Key frame="59" value="44.1241" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="18" value="-3.16651" /><Key frame="39" value="-2.90283" /><Key frame="59" value="-2.90283" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="18" value="110.302" /><Key frame="39" value="42.9767" /><Key frame="59" value="46.756" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="18" value="36.9169" /><Key frame="39" value="62.845" /><Key frame="59" value="67.2396" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="39" value="28.3866" /><Key frame="59" value="27.8593" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="39" value="0.818" /><Key frame="59" value="0.818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="778" y="1058"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="20" value="45.3" /><Key frame="40" value="43.7" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="20" value="2.54646" /><Key frame="40" value="5.18321" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="20" value="-42.0147" /><Key frame="40" value="-74.9741" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="20" value="-44.2071" /><Key frame="40" value="-39.2852" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="40" value="-36" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="40" value="0.381818" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="19" value="47" /><Key frame="37" value="48.8702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="19" value="-4.74856" /><Key frame="37" value="-4.83645" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="19" value="56.7757" /><Key frame="37" value="95.9754" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="19" value="56.6047" /><Key frame="37" value="46.4971" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="37" value="10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="37" value="0.363636" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="779" y="1158"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="64"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1"><Key frame="15" value="37" /><Key frame="24" value="44" /><Key frame="33" value="46" /><Key frame="43" value="44" /><Key frame="64" value="46.5802" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1"><Key frame="15" value="9.05044" /><Key frame="24" value="9.66569" /><Key frame="33" value="1.31597" /><Key frame="43" value="4.48007" /><Key frame="64" value="3.77694" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1"><Key frame="15" value="-11.9557" /><Key frame="24" value="-41.1357" /><Key frame="33" value="-47.9913" /><Key frame="43" value="-78.3139" /><Key frame="64" value="-81.7417" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1"><Key frame="15" value="-72.0688" /><Key frame="24" value="-57.8303" /><Key frame="33" value="-65.7406" /><Key frame="43" value="-54.4905" /><Key frame="64" value="-49.3927" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1"><Key frame="24" value="-2" /><Key frame="33" value="-71" /><Key frame="43" value="-53" /><Key frame="64" value="-57.7473" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1"><Key frame="15" value="0.176364" /><Key frame="43" value="0.507273" /><Key frame="64" value="0.5064" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1"><Key frame="20" value="47" /><Key frame="41" value="47" /><Key frame="62" value="45.3" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1"><Key frame="20" value="-10.2857" /><Key frame="41" value="-10.2857" /><Key frame="62" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1"><Key frame="20" value="35.5937" /><Key frame="41" value="35.5937" /><Key frame="62" value="30.0566" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1"><Key frame="20" value="56.9562" /><Key frame="41" value="56.9562" /><Key frame="62" value="60.6477" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1"><Key frame="62" value="8.4352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1"><Key frame="62" value="0.3624" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" /><ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" /></ActuatorList></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="6" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="9" /><Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" /><Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="11" /><Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="12" /><Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="13" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="14" /><Link inputowner="1" indexofinput="2" outputowner="13" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="15" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor Set/Reset" id="2" localization="8" tooltip="Stiffen or loosen all motors." x="704" y="349"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.stiffness = 0

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

    def onUnload(self):
        self.setStiffness(self.stiffness)
        self.onFinished()

    def onInput_onSet(self):
        self.stiffness = self.motion.getStiffnesses( self.getParameter("Motors") )

        stiffness = 1.0 if 'On' in self.getParameter("Action") else 0.0
        self.setStiffness( stiffness )
        self.onReady() #~ activate output of the box

    def onInput_onReset(self):
        self.setStiffness( self.stiffness )
        self.onFinished()

    def setStiffness(self, stiffness):
        self.motion.post.stiffnessInterpolation( self.getParameter("Motors"), stiffness, 0.1 )
        time.sleep(0.1)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Input name="onReset" type="1" type_size="1" nature="1" inner="0" tooltip="Resets motor state to previous state" id="3" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="4" /><Output name="onFinished" type="1" type_size="1" nature="2" inner="0" tooltip="Stimulated after motors reset." id="5" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="6"><Choice value="Off" /><Choice value="On" /></Parameter><Parameter name="Motors" inherits_from_parent="0" content_type="3" value="Arms" default_value="Head" custom_choice="0" tooltip="" id="7"><Choice value="Head" /><Choice value="LArm" /><Choice value="LLeg" /><Choice value="RLeg" /><Choice value="RArm" /><Choice value="HeadYaw" /><Choice value="HeadPitch" /><Choice value="LShoulderPitch" /><Choice value="LShoulderRoll" /><Choice value="LElbowYaw" /><Choice value="LElbowRoll" /><Choice value="LWristYaw" /><Choice value="LHipYawPitch" /><Choice value="LHipRoll" /><Choice value="LHipPitch" /><Choice value="LKneePitch" /><Choice value="LAnklePitch" /><Choice value="LAnkleRoll" /><Choice value="RHipYawPitch" /><Choice value="RHipRoll" /><Choice value="RHipPitch" /><Choice value="RKneePitch" /><Choice value="RAnklePitch" /><Choice value="RAnkleRoll" /><Choice value="RShoulderPitch" /><Choice value="RShoulderRoll" /><Choice value="RElbowYaw" /><Choice value="RElbowRoll" /><Choice value="RWristYaw" /><Choice value="LHand" /><Choice value="RHand" /><Choice value="Arms" /></Parameter></Box><Box name="Say Global" id="6" localization="8" tooltip="Say the text received on its input." x="419" y="50"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.mem = ALProxy('ALMemory')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

        try:
            self.mem.getData( 'sys/speech/shape' )
        except:
            self.mem.declareEvent( 'sys/speech/shape' )
            self.mem.insertData( 'sys/speech/shape', 100 )

        try:
            self.mem.getData( 'sys/speech/speed' )
        except:
            self.mem.declareEvent( 'sys/speech/speed' )
            self.mem.insertData( 'sys/speech/speed', 100 )

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        p = str( self.getParameter("Text") )
        self.bIsRunning = True
        try:
            shape = self.mem.getData( 'sys/speech/shape' )
            speed = self.mem.getData( 'sys/speech/speed' )
            sentence = "\RSPD="+ str( speed if speed else 100 ) + "\ "
            sentence += "\VCT="+ str( shape if shape else 100 ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Text" inherits_from_parent="1" content_type="5" value="" default_value="" tooltip="" id="5" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="6" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="5" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="9" indexofinput="3" outputowner="1" indexofoutput="3" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" /><Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="6" /><Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="7" /><Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="8" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="9" /><Link inputowner="5" indexofinput="2" outputowner="8" indexofoutput="3" /><Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="3" /><Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="10" /><Link inputowner="10" indexofinput="2" outputowner="1" indexofoutput="11" /><Link inputowner="5" indexofinput="2" outputowner="7" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="11" indexofinput="2" outputowner="1" indexofoutput="12" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Insert Data" id="23" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key." x="735" y="448"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self, p):
        self.memory.insertData(self.getParameter("key"), p)
        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="doku_app/next_app" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Text Edit" id="24" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="296" y="474"><bitmap>media/images/box/interaction/vocabulary.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("webapi/behavior_1")]]></content></script><pluginContent><text><![CDATA[webapi/behavior_1]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" /></Box><Link inputowner="22" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="19" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="19" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="19" indexofinput="3" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="6" outputowner="17" indexofoutput="5" /><Link inputowner="17" indexofinput="2" outputowner="14" indexofoutput="7" /><Link inputowner="2" indexofinput="2" outputowner="17" indexofoutput="4" /><Link inputowner="23" indexofinput="2" outputowner="24" indexofoutput="3" /><Link inputowner="24" indexofinput="2" outputowner="0" indexofoutput="2" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>